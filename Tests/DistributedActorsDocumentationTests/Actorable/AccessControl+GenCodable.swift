// ==== ------------------------------------------------------------------ ====
// === DO NOT EDIT: Generated by GenActors
// ==== ------------------------------------------------------------------ ====

import DistributedActors

// ==== ----------------------------------------------------------------------------------------------------------------
// MARK: DO NOT EDIT: Codable conformance for AccessControl.Message
// TODO: This will not be required, once Swift synthesizes Codable conformances for enums with associated values

extension AccessControl.Message: Codable {
    // TODO: Check with Swift team which style of discriminator to aim for
    public enum DiscriminatorKeys: String, Decodable {
        case greetPublicly
        case greetInternal
    }

    public enum CodingKeys: CodingKey {
        case _case
    }

    public init(from decoder: Decoder) throws {
        let container = try decoder.container(keyedBy: CodingKeys.self)
        switch try container.decode(DiscriminatorKeys.self, forKey: CodingKeys._case) {
        case .greetPublicly:
            self = .greetPublicly
        case .greetInternal:
            self = .greetInternal
        }
    }

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        switch self {
        case .greetPublicly:
            try container.encode(DiscriminatorKeys.greetPublicly.rawValue, forKey: CodingKeys._case)
        case .greetInternal:
            try container.encode(DiscriminatorKeys.greetInternal.rawValue, forKey: CodingKeys._case)
        }
    }
}
