//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift Distributed Actors open source project
//
// Copyright (c) 2018-2019 Apple Inc. and the Swift Distributed Actors project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.md for the list of Swift Distributed Actors project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

import XCTest

///
/// NOTE: This file was generated by generate_linux_tests.rb
///
/// Do NOT edit this file directly as it will be regenerated automatically when needed.
///

extension SWIMInstanceTests {

   static var allTests : [(String, (SWIMInstanceTests) -> () throws -> Void)] {
      return [
                ("test_addMember_shouldAddAMemberWithTheSpecifiedStatusAndCurrentProtocolPeriod", test_addMember_shouldAddAMemberWithTheSpecifiedStatusAndCurrentProtocolPeriod),
                ("test_notMyself_shouldDetectDirectLocalRef", test_notMyself_shouldDetectDirectLocalRef),
                ("test_notMyself_shouldDetectRemoteVersionOfSelf", test_notMyself_shouldDetectRemoteVersionOfSelf),
                ("test_notMyself_shouldDetectRandomNotMyselfActor", test_notMyself_shouldDetectRandomNotMyselfActor),
                ("test_mark_shouldNotApplyEqualStatus", test_mark_shouldNotApplyEqualStatus),
                ("test_mark_shouldApplyNewerStatus", test_mark_shouldApplyNewerStatus),
                ("test_mark_shouldNotApplyOlderStatus", test_mark_shouldNotApplyOlderStatus),
                ("test_mark_shouldApplyDead", test_mark_shouldApplyDead),
                ("test_mark_shouldNotApplyAnyStatusIfAlreadyDead", test_mark_shouldNotApplyAnyStatusIfAlreadyDead),
                ("test_onPingRequestResponse_allowsSuspectNodeToRefuteSuspicion", test_onPingRequestResponse_allowsSuspectNodeToRefuteSuspicion),
                ("test_onPingRequestResponse_ignoresTooOldRefutations", test_onPingRequestResponse_ignoresTooOldRefutations),
                ("test_onPing_shouldOfferAckMessageWithMyselfReference", test_onPing_shouldOfferAckMessageWithMyselfReference),
                ("test_onPing_withAlive_shouldReplyWithAlive_withIncrementedIncarnation", test_onPing_withAlive_shouldReplyWithAlive_withIncrementedIncarnation),
                ("test_onPing_withSuspicion_shouldReplyWithAlive_withIncrementedIncarnation", test_onPing_withSuspicion_shouldReplyWithAlive_withIncrementedIncarnation),
                ("test_incrementProtocolPeriod_shouldIncrementTheProtocolPeriodNumberByOne", test_incrementProtocolPeriod_shouldIncrementTheProtocolPeriodNumberByOne),
                ("test_members_shouldContainAllAddedMembers", test_members_shouldContainAllAddedMembers),
                ("test_nextMemberToPing_shouldReturnEachMemberOnceBeforeRepeating", test_nextMemberToPing_shouldReturnEachMemberOnceBeforeRepeating),
                ("test_addMember_shouldNotAddLocalNodeForPinging", test_addMember_shouldNotAddLocalNodeForPinging),
                ("test_nextMemberToPingRequest", test_nextMemberToPingRequest),
                ("test_member_shouldReturnTheLastAssignedStatus", test_member_shouldReturnTheLastAssignedStatus),
                ("test_member_shouldWorkForMyself", test_member_shouldWorkForMyself),
                ("test_suspects_shouldContainOnlySuspectedNodes", test_suspects_shouldContainOnlySuspectedNodes),
                ("test_makeGossipPayload_shouldReturnNoneIfNothingToGossip", test_makeGossipPayload_shouldReturnNoneIfNothingToGossip),
                ("test_makeGossipPayload_shouldReturnEachEntryOnlyTheConfiguredNumberOfTimes", test_makeGossipPayload_shouldReturnEachEntryOnlyTheConfiguredNumberOfTimes),
                ("test_makeGossipPayload_shouldResetCounterWhenStatusChanged", test_makeGossipPayload_shouldResetCounterWhenStatusChanged),
           ]
   }
}

