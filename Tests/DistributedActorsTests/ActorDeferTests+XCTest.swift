//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift Distributed Actors open source project
//
// Copyright (c) 2019 Apple Inc. and the Swift Distributed Actors project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.md for the list of Swift Distributed Actors project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

import XCTest

///
/// NOTE: This file was generated by generate_linux_tests.rb
///
/// Do NOT edit this file directly as it will be regenerated automatically when needed.
///

extension ActorDeferTests {
    static var allTests: [(String, (ActorDeferTests) -> () throws -> Void)] {
        return [
            ("test_defer_untilReceived_shouldExecute_whenStayingSame", test_defer_untilReceived_shouldExecute_whenStayingSame),
            ("test_defer_untilReceived_shouldExecute_afterNoError_whenStopping", test_defer_untilReceived_shouldExecute_afterNoError_whenStopping),
            ("test_defer_untilReceived_shouldExecute_afterError", test_defer_untilReceived_shouldExecute_afterError),
            ("test_defer_untilReceived_shouldExecute_afterFault", test_defer_untilReceived_shouldExecute_afterFault),
            ("test_defer_untilTerminated_shouldNotExecute_whenStayingSame", test_defer_untilTerminated_shouldNotExecute_whenStayingSame),
            ("test_defer_untilTerminated_shouldExecute_whenStopping", test_defer_untilTerminated_shouldExecute_whenStopping),
            ("test_defer_untilTerminated_shouldExecute_afterError", test_defer_untilTerminated_shouldExecute_afterError),
            ("test_defer_untilTerminated_shouldExecute_afterFault", test_defer_untilTerminated_shouldExecute_afterFault),
            ("test_defer_untilFailed_shouldNotExecute_whenStayingSame", test_defer_untilFailed_shouldNotExecute_whenStayingSame),
            ("test_defer_untilFailed_shouldNotExecute_whenStopping", test_defer_untilFailed_shouldNotExecute_whenStopping),
            ("test_defer_untilFailed_shouldExecute_afterError", test_defer_untilFailed_shouldExecute_afterError),
            ("test_defer_untilFailed_shouldExecute_afterFault", test_defer_untilFailed_shouldExecute_afterFault),
            ("test_defer_untilReceiveFailed_shouldNotExecute_whenStayingSame", test_defer_untilReceiveFailed_shouldNotExecute_whenStayingSame),
            ("test_defer_untilReceiveFailed_shouldNotExecute_whenStopping", test_defer_untilReceiveFailed_shouldNotExecute_whenStopping),
            ("test_defer_untilReceiveFailed_shouldExecute_afterError", test_defer_untilReceiveFailed_shouldExecute_afterError),
            ("test_defer_untilReceiveFailed_shouldExecute_afterFault", test_defer_untilReceiveFailed_shouldExecute_afterFault),
            ("test_defer_untilReceiveFailed_shouldNotCarryOverToNextReceiveReduction", test_defer_untilReceiveFailed_shouldNotCarryOverToNextReceiveReduction),
            ("test_mixedDefers_shouldExecuteAtRightPointsInTime_failed", test_mixedDefers_shouldExecuteAtRightPointsInTime_failed),
            ("test_mixedDefers_shouldExecuteAtRightPointsInTime_stopped", test_mixedDefers_shouldExecuteAtRightPointsInTime_stopped),
            ("test_executeDefer_whenSetupReturnsSame", test_executeDefer_whenSetupReturnsSame),
        ]
    }
}
