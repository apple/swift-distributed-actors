// ==== ------------------------------------------------------------------ ====
// === DO NOT EDIT: Generated by GenActors                     
// ==== ------------------------------------------------------------------ ====

//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift Distributed Actors open source project
//
// Copyright (c) 2019-2020 Apple Inc. and the Swift Distributed Actors project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.md for the list of Swift Distributed Actors project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

@testable import DistributedActors
import DistributedActorsTestKit
import XCTest

// ==== ----------------------------------------------------------------------------------------------------------------
// MARK: DO NOT EDIT: Generated MessageTarget messages 

extension GeneratedActor.Messages {
    public enum MessageTarget: ActorMessage { 
        case handleMessage(MessageType, replyTo: ActorRef<String>)  
    }
}
// ==== ----------------------------------------------------------------------------------------------------------------
// MARK: DO NOT EDIT: Boxing MessageTarget for any inheriting actorable `A` 

extension Actor where Act: MessageTarget {

    public func handleMessage(_ message: MessageType, replyTo: ActorRef<String>) {
        self.ref.tell(Act._boxMessageTarget(.handleMessage(message, replyTo: replyTo)))
    }
 

}
