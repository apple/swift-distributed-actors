//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift Distributed Actors open source project
//
// Copyright (c) 2019 Apple Inc. and the Swift Distributed Actors project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.md for the list of Swift Distributed Actors project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

syntax = "proto3";

option optimize_for = SPEED;
option swift_prefix = "Proto";

import "ActorAddress.proto";
import "CRDT/CRDT.proto";
import "Serialization/Serialization.proto";

// ==== Wire envelope for CRDT types -----------------------------------------------------------------------------------

message CRDTEnvelope {
    Manifest manifest = 1;
    bytes payload     = 2;
}

// ==== CRDT Direct Replication ----------------------------------------------------------------------------------------

// ***** CRDT.Replicator.Message *****

message CRDTReplicatorMessage {
    CRDTReplicatorRemoteCommand remoteCommand = 1;
}

// ***** CRDT.Replicator.RemoteCommand *****
message CRDTReplicatorRemoteCommand {
    oneof value {
        CRDTWrite write = 1;
        CRDTWrite writeDelta = 2;
        CRDTRead read = 3;
        CRDTDelete delete = 4;
    }
}

// ***** CRDT.Replicator.RemoteCommand.write and .writeDelta *****

message CRDTWrite {
    CRDTIdentity identity = 1;
    CRDTEnvelope envelope = 2;
    ActorAddress replyTo = 3;
}

message CRDTWriteResult {
    enum Type {
        UNSPECIFIED = 0;
        SUCCESS = 1;
        FAILURE = 2;
    }

    Type type = 1;
    CRDTWriteError error = 2;
}

message CRDTWriteError {
    enum Type {
        UNSPECIFIED = 0;
        MISSING_CRDT_FOR_DELTA = 1;
        INCORRECT_DELTA_TYPE = 2;
        CANNOT_WRITE_DELTA_FOR_NON_DELTA_CRDT = 3;
        INPUT_AND_STORED_DATA_TYPE_MISMATCH = 4;
        UNSUPPORTED_CRDT = 5;
    }

    Type type = 1;
    string hint = 2;
}

// ***** CRDT.Replicator.RemoteCommand.read *****

message CRDTRead {
    CRDTIdentity identity = 1;
    ActorAddress replyTo = 2;
}

message CRDTReadResult {
    enum Type {
        UNSPECIFIED = 0;
        SUCCESS = 1;
        FAILURE = 2;
    }

    Type type = 1;
    CRDTEnvelope envelope = 2;
    CRDTReadError error = 3;

}

message CRDTReadError {
    enum Type {
        UNSPECIFIED = 0;
        NOT_FOUND = 1;
    }

    Type type = 1;
}

// ***** CRDT.Replicator.RemoteCommand.delete *****

message CRDTDelete {
    CRDTIdentity identity = 1;
    ActorAddress replyTo = 2;
}

message CRDTDeleteResult {
    enum Type {
        UNSPECIFIED = 0;
        SUCCESS = 1;
    }

    Type type = 1;
}
