//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift Distributed Actors open source project
//
// Copyright (c) 2019 Apple Inc. and the Swift Distributed Actors project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.md for the list of Swift Distributed Actors project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//


syntax = "proto3";

option optimize_for = SPEED;
option swift_prefix = "Proto";

import "ActorAddress.proto";

message SWIMRemoteMessage {
    oneof request {
        SWIMPing ping = 1;
        SWIMPingRequest pingRequest = 2;
    }
}

message SWIMPing {
    ActorAddress replyTo = 1;
    SWIMGossipPayload payload = 2;
    uint32 sequenceNumber = 3;
}

message SWIMPingRequest {
    UniqueNode target = 1;
    ActorAddress replyTo = 2;
    SWIMGossipPayload payload = 3;
    uint32 sequenceNumber = 4;
}

message SWIMPingResponse {
    message Ack {
        UniqueNode target = 1;
        uint64 incarnation = 2;
        SWIMGossipPayload payload = 3;
        uint32 sequenceNumber = 4;
    }
    message Nack {
        UniqueNode target = 1;
        uint32 sequenceNumber = 2;
    }
    oneof pingResponse {
        Ack ack = 1;
        Nack nack = 2;
    }
}

message SWIMStatus {
    enum Type {
        UNSPECIFIED = 0;
        ALIVE = 1;
        SUSPECT = 2;
        UNREACHABLE = 3;
        DEAD = 4;
    }

    Type type = 1;
    uint64 incarnation = 2;
    repeated UniqueNode suspectedBy = 3;
}

message SWIMMember {
    UniqueNode node   = 1;
    SWIMStatus status = 2;
}

message SWIMGossipPayload {
    repeated SWIMMember member = 1;
}
