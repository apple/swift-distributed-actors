// ==== ------------------------------------------------------------------ ====
// === DO NOT EDIT: Generated by GenActors                     
// ==== ------------------------------------------------------------------ ====

// ==== ------------------------------------------------------------------ ====
// === DO NOT EDIT: Generated by GenActors                     
// ==== ------------------------------------------------------------------ ====

//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift Distributed Actors open source project
//
// Copyright (c) 2019 Apple Inc. and the Swift Distributed Actors project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.md for the list of Swift Distributed Actors project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//

// tag::xpc_example[]
import DistributedActors
import DistributedActorsXPC
import NIO

// ==== ----------------------------------------------------------------------------------------------------------------
// MARK: DO NOT EDIT: Generated GreetingsServiceStub messages 

/// DO NOT EDIT: Generated GreetingsServiceStub messages
extension GreetingsServiceStub {

    public enum Message { 
        case logGreeting(name: String) 
        case greet(name: String, _replyTo: ActorRef<String>) 
        case greetingsService(/*TODO: MODULE.*/GeneratedActor.Messages.GreetingsService) 
    }
    
    /// Performs boxing of GeneratedActor.Messages.GreetingsService messages such that they can be received by Actor<GreetingsServiceStub>
    public static func _boxGreetingsService(_ message: GeneratedActor.Messages.GreetingsService) -> GreetingsServiceStub.Message {
        .greetingsService(message)
    } 
    
}
// ==== ----------------------------------------------------------------------------------------------------------------
// MARK: DO NOT EDIT: Generated GreetingsServiceStub behavior

extension GreetingsServiceStub {

    public static func makeBehavior(instance: GreetingsServiceStub) -> Behavior<Message> {
        fatalError("Behavior STUB for XPCActorableProtocol. Not intended to be instantiated.")
    }
}
