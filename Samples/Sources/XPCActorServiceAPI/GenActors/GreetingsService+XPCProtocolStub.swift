// ==== ------------------------------------------------------------------ ====
// === DO NOT EDIT: Generated by GenActors                     
// ==== ------------------------------------------------------------------ ====


// tag::xpc_example[]
import DistributedActors
import DistributedActorsXPC
import NIO

// ==== ----------------------------------------------------------------------------------------------------------------
// MARK: DO NOT EDIT: Generated GreetingsServiceStub for XPCService consumers of the GreetingsService XPCActorableProtocol

/// DO NOT EDIT: Generated GreetingsService messages
///
/// This type serves only as "stub" in order for callers of an XPCService implementing GreetingsService to be 
/// able to express `Actor<GreetingsService>`.
public struct GreetingsServiceStub: Actorable, GreetingsService {
    private init() {
        // Just a Stub, no-one should ever be instantiating it.
    }

    public func logGreeting(name: String) {
        fatalError("Function STUB for XPCActorableProtocol [logGreeting], function: \(#function).")
    }

    public func greet(name: String) -> String {
        fatalError("Function STUB for XPCActorableProtocol [greet], function: \(#function).")
    }

    public func fatalCrash() {
        fatalError("Function STUB for XPCActorableProtocol [fatalCrash], function: \(#function).")
    }

    public func greetDirect(who: ActorRef<String>) {
        fatalError("Function STUB for XPCActorableProtocol [greetDirect], function: \(#function).")
    }

    public func greetFuture(name: String) -> EventLoopFuture<String> {
        fatalError("Function STUB for XPCActorableProtocol [greetFuture], function: \(#function).")
    }

}
