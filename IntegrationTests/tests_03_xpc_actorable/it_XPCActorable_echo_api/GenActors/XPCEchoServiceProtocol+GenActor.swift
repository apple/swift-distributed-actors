// ==== ------------------------------------------------------------------ ====
// === DO NOT EDIT: Generated by GenActors                     
// ==== ------------------------------------------------------------------ ====

//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift Distributed Actors open source project
//
// Copyright (c) 2019 Apple Inc. and the Swift Distributed Actors project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.md for the list of Swift Distributed Actors project authors
//
// SPDX-License-Identifier: Apache-2.0
//sa
//===----------------------------------------------------------------------===//

import DistributedActors
import DistributedActorsXPC

// ==== ----------------------------------------------------------------------------------------------------------------
// MARK: DO NOT EDIT: Generated XPCEchoServiceProtocol messages 

extension GeneratedActor.Messages {
    public enum XPCEchoServiceProtocol { 
        case echo(string: String, _replyTo: ActorRef<String>) 
        case letItCrash  
    }
}
// ==== ----------------------------------------------------------------------------------------------------------------
// MARK: DO NOT EDIT: Boxing XPCEchoServiceProtocol for any inheriting actorable `A` 

extension Actor where A: XPCEchoServiceProtocol {

    public func echo(string: String) -> Reply<String> {
        // TODO: FIXME perhaps timeout should be taken from context
        Reply(nioFuture:
            self.ref.ask(for: String.self, timeout: .effectivelyInfinite) { _replyTo in
                A._boxXPCEchoServiceProtocol(.echo(string: string, _replyTo: _replyTo))
            }.nioFuture
        )
    }
 

    public func letItCrash() {
        self.ref.tell(A._boxXPCEchoServiceProtocol(.letItCrash))
    }
 

}
