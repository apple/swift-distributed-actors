[13/13] Linking swift-distributed-actorsPackageTests
Test Suite 'Selected tests' started at 2020-01-23 01:16:36.801
Test Suite 'swift-distributed-actorsPackageTests.xctest' started at 2020-01-23 01:16:36.801
Test Suite 'DowningClusteredTests' started at 2020-01-23 01:16:36.801
Test Case '-[DistributedActorsTests.DowningClusteredTests test_downingNode_eventuallyResultsInRemovalFromGossip]' started.
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958740]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958715]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://second@localhost:9002/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958740]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958715]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://second@localhost:9002/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift:728][thread:958717]: leaderAction = moveMember(sact://second@localhost:9002 :: [joining] -> [     up]) (interpret at: /Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift:476)
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958719]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://second@localhost:9002/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift:728][thread:958717]: leaderAction = moveMember(sact://first@localhost:9001 :: [joining] -> [     up]) (interpret at: /Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift:476)
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958742]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/user/$ask-b
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958746]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958720]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://second@localhost:9002/user/$ask-y
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958741]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958714]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://second@localhost:9002/user/$ask-b
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958725]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://second@localhost:9002/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958740]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958740]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958740]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958767]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://second@localhost:9002/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958768]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://second@localhost:9002/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958767]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://second@localhost:9002/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958739]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/user/$ask-b
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958743]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958773]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://second@localhost:9002/user/$ask-n
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958725]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958725]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958771]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958767]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958771]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958767]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958716]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/user/$ask-n
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958714]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958724]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/user/$ask-d
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958772]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/user/$ask-n
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958720]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958769]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/user/$ask-r
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958716]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958743]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958774]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/user/$ask-f
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958723]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://second@localhost:9002/user/$ask-d
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958720]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://second@localhost:9002/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958741]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958716]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958743]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958766]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/user/$ask-g
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958766]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://second@localhost:9002/user/$ask-r
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958740]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958719]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://second@localhost:9002/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift:728][thread:958716]: leaderAction = moveMember(sact://third@localhost:9003 :: [joining] -> [     up]) (interpret at: /Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift:524)
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958715]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958743]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958774]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/user/$ask-8
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958714]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://second@localhost:9002/user/$ask-f
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958743]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958721]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://second@localhost:9002/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958765]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/system/receptionist/$messageAdapter
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958746]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/system/receptionist/$messageAdapter
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958719]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958741]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958715]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://second@localhost:9002/system/receptionist/$messageAdapter
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958769]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://second@localhost:9002/system/receptionist/$messageAdapter
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958768]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/user/$ask-e
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958718]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/receptionist/$messageAdapter
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958749]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/receptionist/$messageAdapter
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958773]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://second@localhost:9002/user/$ask-g
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958721]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://second@localhost:9002/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958742]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958718]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958740]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958772]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/user/$ask-j
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958719]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://second@localhost:9002/user/$ask-8
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958740]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958724]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958744]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958744]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958722]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958765]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/user/$ask-k
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958714]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958720]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958774]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/user/$ask-m
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958719]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958722]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958765]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/user/$ask-c
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958720]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958773]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/system/receptionist/$messageAdapter
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958720]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958772]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/user/$ask-p
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958722]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/receptionist/$messageAdapter
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958717]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958725]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958766]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/user/$ask-q
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958721]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958725]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958772]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/user/$ask-x
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958724]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958721]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958767]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/user/$ask-o
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958724]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958715]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958766]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/user/$ask-t
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958719]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958765]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/system/receptionist/$messageAdapter
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958721]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958766]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/user/$ask-1
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958717]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/receptionist/$messageAdapter
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958720]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958716]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958773]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/user/$ask-u
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958721]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958724]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958764]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/user/$ask-w
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958721]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958720]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958769]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/user/$ask-i
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958718]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958719]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958772]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/user/$ask-s
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958716]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958725]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958774]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/system/receptionist/$messageAdapter
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958764]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/user/$ask-z
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958723]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/receptionist/$messageAdapter
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958716]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958718]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958767]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/user/$ask-a
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958720]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958723]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958772]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/user/$ask-3
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958723]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958724]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958768]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/user/$ask-4
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958714]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958774]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/user/$ask-5
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958721]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958767]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/system/receptionist/$messageAdapter
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958721]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/receptionist/$messageAdapter
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958724]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958725]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958771]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/user/$ask-h
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958721]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958725]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958773]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/user/$ask-7
/Users/ktoso/code/actors/Tests/DistributedActorsTests/Cluster/DowningStrategy/DowningClusteredTests.swift:139: error: -[DistributedActorsTests.DowningClusteredTests test_downingNode_eventuallyResultsInRemovalFromGossip] : failed -
        _ = try shouldNotThrow {
                ^~~~~~~~~~~~~~~
error: Unexpected throw captured
            try self.testKit(first).eventually(within: .seconds(20), interval: .seconds(1)) {
                                   ^~~~~~~~~~~
error: No result within 20s for block at /Users/ktoso/code/actors/Tests/DistributedActorsTests/Cluster/DowningStrategy/DowningClusteredTests.swift:140. Queried 20 times, within 20s. Last error:
                try firstCapturedLogs.shouldContain(grep:
                                     ^~~~~~~~~~~~~~
error: Did not find expected log, matching query:
    [grep: "Leader moving member: Cluster.MembershipChange(node: sact://third@localhost:9003, replaced: [nil], fromStatus: joining, toStatus: up) ", ]
in captured logs:
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.debug, message: Spawning [DistributedActors.Behavior<DistributedActors.SWIM.Message>.setup((Function))], on path: [/system/cluster/swim], metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/ActorShell+Children.swift", function: "_spawn(_:props:_:)", line: 345)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.trace, message: Successfully subscribed [ActorRef<Cluster.Event>(/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y)], offering membership snapshot, metadata: Optional(["label": /system/clusterEvents]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterEventStream.swift", function: "behavior", line: 43)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.trace, message: Successfully subscribed [ActorRef<Cluster.Event>(/system/replicator/$sub-DistributedActors.Cluster.Event-y)], offering membership snapshot, metadata: Optional(["label": /system/clusterEvents]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterEventStream.swift", function: "behavior", line: 43)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.debug, message: Spawning [DistributedActors.Behavior<DistributedActors.Cluster.Event>.setup((Function))], on path: [/system/cluster/leadership], metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/ActorShell+Children.swift", function: "_spawn(_:props:_:)", line: 345)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.trace, message: Spawned /system/cluster/leadership to run LowestReachableMember(minimumNumberOfMembersToDecide: 2, loseLeadershipIfBelowMinNrOfMembers: false), metadata: Optional(["label": /system/cluster/leadership]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Leadership.swift", function: "behavior", line: 136)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.debug, message: Spawning [DistributedActors.Behavior<DistributedActors.DowningStrategyMessage>.setup((Function))], on path: [/system/cluster/downingStrategy], metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/ActorShell+Children.swift", function: "_spawn(_:props:_:)", line: 345)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.info, message: Binding to: [sact://first@localhost:9001], metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift", function: "bind()", line: 355)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.trace, message: Successfully subscribed [ActorRef<Cluster.Event>(/system/cluster/leadership)], offering membership snapshot, metadata: Optional(["label": /system/clusterEvents]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterEventStream.swift", function: "behavior", line: 43)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.trace, message: Successfully subscribed [ActorRef<Cluster.Event>(/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y)], offering membership snapshot, metadata: Optional(["label": /system/clusterEvents]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterEventStream.swift", function: "behavior", line: 43)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.info, message: Not enough members [1/2] to run election, members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)], metadata: Optional(["label": /system/cluster/leadership]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Leadership.swift", function: "runElection(context:membership:)", line: 264)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.trace, message: Downing strategy reaction to snapshot(Membership(count: 0, leader: [.none], members: [])) resulted in: none, metadata: Optional(["downing/strategy": TimeoutBasedDowningStrategy, "label": /system/cluster/downingStrategy, "tag": downing]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/DowningStrategy/DowningStrategy.swift", function: "receiveClusterEvent(_:event:)", line: 76)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.info, message: Bound to [IPv4]127.0.0.1/127.0.0.1:9001, metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift", function: "bind()", line: 366)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.debug, message: Spawning [DistributedActors.Behavior<DistributedActors.ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>.setup((Function))], on path: [/system/cluster/gossip], metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/ActorShell+Children.swift", function: "_spawn(_:props:_:)", line: 345)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.trace, message: Schedule next gossip round in 1s, metadata: Optional(["label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "scheduleNextGossipRound(context:)", line: 142)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.info, message: ACK  VERSION >>> [:] >>>> [uniqueNode:sact://first@localhost:9001: 1]
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
), membership: Membership(count: 0, leader: [.none], members: []))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 1
), membership: Membership(count: 1, leader: [.none], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)]))
RES: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 1
), membership: Membership(count: 1, leader: [.none], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)])), metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShellState.swift", function: "latestGossip", line: 93)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.trace, message: Local membership version is [.happenedBefore] to incoming gossip; Merge resulted in 1 changes., metadata: Optional(["gossip/incoming": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 1
), membership: Membership(count: 1, leader: [.none], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)])), "gossip/before": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
), membership: Membership(count: 0, leader: [.none], members: [])), "label": /system/cluster, "tag": membership, "gossip/now": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 1
), membership: Membership(count: 1, leader: [.none], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)])), "membership/changes": ["Cluster.MembershipChange(node: sact://first@localhost:9001, replaced: [nil], fromStatus: joining, toStatus: joining)"]]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift", function: "receiveMembershipGossip(_:_:gossip:)", line: 501)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.info, message: Extending handshake offer to sact://second@localhost:9002), metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift", function: "connectSendHandshakeOffer(_:_:initiated:)", line: 627)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.info, message: Not enough members [1/2] to run election, members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)], metadata: Optional(["label": /system/cluster/leadership]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Leadership.swift", function: "runElection(context:membership:)", line: 264)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.trace, message: Downing strategy reaction to membershipChange(sact://first@localhost:9001 :: [joining] -> [joining]) resulted in: none, metadata: Optional(["downing/strategy": TimeoutBasedDowningStrategy, "label": /system/cluster/downingStrategy, "tag": downing]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/DowningStrategy/DowningStrategy.swift", function: "receiveClusterEvent(_:event:)", line: 76)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.trace, message: Published event membershipChange(sact://first@localhost:9001 :: [joining] -> [joining]) to 4 subscribers, metadata: Optional(["eventStream/subscribers": ["/system/replicator/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/leadership", "/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y"], "label": /system/clusterEvents]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterEventStream.swift", function: "behavior", line: 60)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.info, message: BUMP VERSION >>> [uniqueNode:sact://first@localhost:9001: 1] >>>> [uniqueNode:sact://first@localhost:9001: 2]
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 1
), membership: Membership(count: 1, leader: [.none], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)]))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 1
), membership: Membership(count: 2, leader: [.none], members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)]))
RES: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
), membership: Membership(count: 2, leader: [.none], members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)])), metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShellState.swift", function: "latestGossip", line: 85)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.debug, message: Associated with: [sact://second:490321953@localhost:9002]; Membership change: Cluster.MembershipChange(node: sact://second@localhost:9002, replaced: [nil], fromStatus: nil, toStatus: joining), resulting in: Membership(count: 2, leader: [.none], members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)]), metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift", function: "onHandshakeAccepted(_:_:_:channel:)", line: 824)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.trace, message: Published event membershipChange(sact://second@localhost:9002 :: [unknown] -> [joining]) to 4 subscribers, metadata: Optional(["eventStream/subscribers": ["/system/replicator/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/leadership", "/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y"], "label": /system/clusterEvents]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterEventStream.swift", function: "behavior", line: 60)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.trace, message: Downing strategy reaction to membershipChange(sact://second@localhost:9002 :: [unknown] -> [joining]) resulted in: none, metadata: Optional(["label": /system/cluster/downingStrategy, "tag": downing, "downing/strategy": TimeoutBasedDowningStrategy]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/DowningStrategy/DowningStrategy.swift", function: "receiveClusterEvent(_:event:)", line: 76)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.debug, message: Selected new leader: [[nil] -> [Member(sact://first@localhost:9001, status: joining, reachability: reachable)]], metadata: Optional(["label": /system/cluster/leadership, "membership": Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)])]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Leadership.swift", function: "selectByLowestAddress(context:membership:membersToSelectAmong:)", line: 321)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.debug, message: Associated sact://second@localhost:9002, informing SWIM to monitor this node., metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift", function: "onInitJoin(_:state:joining:)", line: 959)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.trace, message: Got introduced to peer [ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://second@localhost:9002/system/cluster/gossip)], pushing initial gossip immediately, metadata: Optional(["gossip/peers": [sact://second:490321953@localhost:9002/system/cluster/gossip], "label": /system/cluster/gossip, "gossip/peerCount": 1]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "onIntroducePeer(_:peer:)", line: 75)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.info, message: Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://second@localhost:9002/system/cluster/gossip), metadata: Optional(["label": /system/cluster/gossip, "gossip/target": sact://second@localhost:9002/system/cluster/gossip, "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
), membership: Membership(count: 2, leader: [.none], members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)]))), "gossip/peers": [sact://second:490321953@localhost:9002/system/cluster/gossip], "gossip/peerCount": 1]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "sendGossip(_:to:)", line: 129)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.info, message: BUMP VERSION >>> [uniqueNode:sact://first@localhost:9001: 2] >>>> [uniqueNode:sact://first@localhost:9001: 3]
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
), membership: Membership(count: 2, leader: [.none], members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)]))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)]))
RES: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 3
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)])), metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShellState.swift", function: "latestGossip", line: 85)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.info, message: Leader change: LeadershipChange(oldLeader: nil, newLeader: Optional(Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable))), metadata: Optional(["membership/count": 2, "label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShellState.swift", function: "applyClusterEventAsChange(_:)", line: 445)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.info, message: CONVERGENCE leader actions.... Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 3
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)])), metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShellState.swift", function: "collectLeaderActions()", line: 506)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.trace, message: Membership updated Membership sact://first@localhost:9001:
  LEADER: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)]
  [sact://first:2644199270@localhost:9001] STATUS: [joining]
  [sact://second:490321953@localhost:9002] STATUS: [joining],
  by leadershipChange(DistributedActors.Cluster.LeadershipChange(oldLeader: nil, newLeader: Optional(Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)))), metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShellState.swift", function: "applyClusterEventAsChange(_:)", line: 483)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.info, message: KEEP VERSION >>> Optional([uniqueNode:sact://first@localhost:9001: 3])
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 3
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)]))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 3
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)])), metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShellState.swift", function: "latestGossip", line: 74)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.info, message: Leader moving member: Cluster.MembershipChange(node: sact://second@localhost:9002, replaced: [nil], fromStatus: joining, toStatus: up), metadata: Optional(["label": /system/cluster, "leader/interpret/location": /Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift:476]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift", function: "interpretLeaderActions(_:_:file:line:)", line: 736)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.trace, message: Published event membershipChange(sact://second@localhost:9002 :: [joining] -> [     up]) to 4 subscribers, metadata: Optional(["eventStream/subscribers": ["/system/replicator/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/leadership", "/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y"], "label": /system/clusterEvents]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterEventStream.swift", function: "behavior", line: 60)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.trace, message: Downing strategy reaction to membershipChange(sact://second@localhost:9002 :: [joining] -> [     up]) resulted in: none, metadata: Optional(["downing/strategy": TimeoutBasedDowningStrategy, "label": /system/cluster/downingStrategy, "tag": downing]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/DowningStrategy/DowningStrategy.swift", function: "receiveClusterEvent(_:event:)", line: 76)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.info, message: KEEP VERSION >>> Optional([uniqueNode:sact://first@localhost:9001: 3])
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 3
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)]))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 3
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShellState.swift", function: "latestGossip", line: 74)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.info, message: Leader moving member: Cluster.MembershipChange(node: sact://first@localhost:9001, replaced: [nil], fromStatus: joining, toStatus: up), metadata: Optional(["label": /system/cluster, "leader/interpret/location": /Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift:476]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift", function: "interpretLeaderActions(_:_:file:line:)", line: 736)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.trace, message: Published event membershipChange(sact://first@localhost:9001 :: [joining] -> [     up]) to 4 subscribers, metadata: Optional(["label": /system/clusterEvents, "eventStream/subscribers": ["/system/replicator/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/leadership", "/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y"]]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterEventStream.swift", function: "behavior", line: 60)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.trace, message: Downing strategy reaction to membershipChange(sact://first@localhost:9001 :: [joining] -> [     up]) resulted in: none, metadata: Optional(["downing/strategy": TimeoutBasedDowningStrategy, "label": /system/cluster/downingStrategy, "tag": downing]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/DowningStrategy/DowningStrategy.swift", function: "receiveClusterEvent(_:event:)", line: 76)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.info, message: KEEP VERSION >>> Optional([uniqueNode:sact://first@localhost:9001: 4])
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 3
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShellState.swift", function: "latestGossip", line: 74)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.trace, message: Published event leadershipChange(DistributedActors.Cluster.LeadershipChange(oldLeader: nil, newLeader: Optional(Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)))) to 4 subscribers, metadata: Optional(["eventStream/subscribers": ["/system/replicator/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/leadership", "/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y"], "label": /system/clusterEvents]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterEventStream.swift", function: "behavior", line: 60)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.trace, message: Downing strategy reaction to leadershipChange(DistributedActors.Cluster.LeadershipChange(oldLeader: nil, newLeader: Optional(Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)))) resulted in: none, metadata: Optional(["label": /system/cluster/downingStrategy, "downing/strategy": TimeoutBasedDowningStrategy, "tag": downing]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/DowningStrategy/DowningStrategy.swift", function: "receiveClusterEvent(_:event:)", line: 76)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.trace, message: Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://second@localhost:9002 @ 2
), membership: Membership(count: 2, leader: [.none], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)]))), metadata: Optional(["actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://second@localhost:9002 @ 2
), membership: Membership(count: 2, leader: [.none], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)]))), "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))), "label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "receiveGossip(_:envelope:)", line: 88)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.info, message: KEEP VERSION >>> Optional([uniqueNode:sact://first@localhost:9001: 4, uniqueNode:sact://second@localhost:9002: 2])
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://second@localhost:9002 @ 2
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShellState.swift", function: "latestGossip", line: 74)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.trace, message: Local membership version is [.concurrent] to incoming gossip; Merge resulted in 0 changes., metadata: Optional(["tag": membership, "gossip/before": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), "membership/changes": [], "gossip/incoming": Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://second@localhost:9002 @ 2
), membership: Membership(count: 2, leader: [.none], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)])), "gossip/now": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://second@localhost:9002 @ 2
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), "label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift", function: "receiveMembershipGossip(_:_:gossip:)", line: 501)
    CapturedLogMessage(date: 2020-01-22 16:16:36 +0000, level: Logging.Logger.Level.info, message: NO CONVERGENCE no leader actions, Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://second@localhost:9002 @ 2
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShellState.swift", function: "collectLeaderActions()", line: 502)
    CapturedLogMessage(date: 2020-01-22 16:16:38 +0000, level: Logging.Logger.Level.info, message: Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://second@localhost:9002/system/cluster/gossip), metadata: Optional(["label": /system/cluster/gossip, "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://second@localhost:9002 @ 2
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))), "gossip/target": sact://second@localhost:9002/system/cluster/gossip, "gossip/peers": [sact://second:490321953@localhost:9002/system/cluster/gossip], "gossip/peerCount": 1]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "sendGossip(_:to:)", line: 129)
    CapturedLogMessage(date: 2020-01-22 16:16:38 +0000, level: Logging.Logger.Level.trace, message: Schedule next gossip round in 1s, metadata: Optional(["label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "scheduleNextGossipRound(context:)", line: 142)
    CapturedLogMessage(date: 2020-01-22 16:16:38 +0000, level: Logging.Logger.Level.trace, message: Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
        uniqueNode:sact://second@localhost:9002 @ 4
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)]))), metadata: Optional(["gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://second@localhost:9002 @ 2
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))), "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
        uniqueNode:sact://second@localhost:9002 @ 4
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)]))), "label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "receiveGossip(_:envelope:)", line: 88)
    CapturedLogMessage(date: 2020-01-22 16:16:38 +0000, level: Logging.Logger.Level.info, message: KEEP VERSION >>> Optional([uniqueNode:sact://first@localhost:9001: 4, uniqueNode:sact://second@localhost:9002: 4])
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://second@localhost:9002 @ 2
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 4
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
        uniqueNode:sact://second@localhost:9002 @ 4
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShellState.swift", function: "latestGossip", line: 74)
    CapturedLogMessage(date: 2020-01-22 16:16:38 +0000, level: Logging.Logger.Level.trace, message: Local membership version is [.concurrent] to incoming gossip; Merge resulted in 0 changes., metadata: Optional(["membership/changes": [], "tag": membership, "gossip/before": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://second@localhost:9002 @ 2
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), "gossip/now": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 4
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
        uniqueNode:sact://second@localhost:9002 @ 4
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), "label": /system/cluster, "gossip/incoming": Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
        uniqueNode:sact://second@localhost:9002 @ 4
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)]))]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift", function: "receiveMembershipGossip(_:_:gossip:)", line: 501)
    CapturedLogMessage(date: 2020-01-22 16:16:38 +0000, level: Logging.Logger.Level.info, message: NO CONVERGENCE no leader actions, Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 4
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
        uniqueNode:sact://second@localhost:9002 @ 4
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShellState.swift", function: "collectLeaderActions()", line: 502)
    CapturedLogMessage(date: 2020-01-22 16:16:38 +0000, level: Logging.Logger.Level.info, message: Accept association with [sact://third:448661589@localhost:9003]!, metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift", function: "onHandshakeOffer(_:_:_:channel:replyInto:)", line: 670)
    CapturedLogMessage(date: 2020-01-22 16:16:38 +0000, level: Logging.Logger.Level.info, message: BUMP VERSION >>> [uniqueNode:sact://first@localhost:9001: 4, uniqueNode:sact://second@localhost:9002: 4] >>>> [uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://second@localhost:9002: 4]
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 4
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
        uniqueNode:sact://second@localhost:9002 @ 4
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 4
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
        uniqueNode:sact://second@localhost:9002 @ 4
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
RES: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 4
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
        uniqueNode:sact://second@localhost:9002 @ 4
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShellState.swift", function: "latestGossip", line: 85)
    CapturedLogMessage(date: 2020-01-22 16:16:38 +0000, level: Logging.Logger.Level.trace, message: Published event membershipChange(sact://third@localhost:9003 :: [unknown] -> [joining]) to 4 subscribers, metadata: Optional(["eventStream/subscribers": ["/system/replicator/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/leadership", "/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y"], "label": /system/clusterEvents]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterEventStream.swift", function: "behavior", line: 60)
    CapturedLogMessage(date: 2020-01-22 16:16:38 +0000, level: Logging.Logger.Level.info, message: NO CONVERGENCE no leader actions, Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 4
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
        uniqueNode:sact://second@localhost:9002 @ 4
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShellState.swift", function: "collectLeaderActions()", line: 502)
    CapturedLogMessage(date: 2020-01-22 16:16:38 +0000, level: Logging.Logger.Level.trace, message: Downing strategy reaction to membershipChange(sact://third@localhost:9003 :: [unknown] -> [joining]) resulted in: none, metadata: Optional(["tag": downing, "downing/strategy": TimeoutBasedDowningStrategy, "label": /system/cluster/downingStrategy]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/DowningStrategy/DowningStrategy.swift", function: "receiveClusterEvent(_:event:)", line: 76)
    CapturedLogMessage(date: 2020-01-22 16:16:38 +0000, level: Logging.Logger.Level.trace, message: Got introduced to peer [ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip)], pushing initial gossip immediately, metadata: Optional(["gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip, sact://second:490321953@localhost:9002/system/cluster/gossip], "gossip/peerCount": 2, "label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "onIntroducePeer(_:peer:)", line: 75)
    CapturedLogMessage(date: 2020-01-22 16:16:38 +0000, level: Logging.Logger.Level.info, message: Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip), metadata: Optional(["gossip/peerCount": 2, "gossip/target": sact://third@localhost:9003/system/cluster/gossip, "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip, sact://second:490321953@localhost:9002/system/cluster/gossip], "label": /system/cluster/gossip, "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 4
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
        uniqueNode:sact://second@localhost:9002 @ 4
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "sendGossip(_:to:)", line: 129)
    CapturedLogMessage(date: 2020-01-22 16:16:38 +0000, level: Logging.Logger.Level.debug, message: Attempted associating with already associated node: [sact://third@localhost:9003], existing association: [associated(AssociatedState(channel: SocketChannel { BaseSocket { fd=51 }, active = true, localAddress = Optional([IPv4]127.0.0.1/127.0.0.1:9001), remoteAddress = Optional([IPv4]127.0.0.1/127.0.0.1:57073) }, selfNode: sact://first@localhost:9001, remoteNode: sact://third@localhost:9003))], metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift", function: "beginHandshake(_:_:with:replyTo:)", line: 579)
    CapturedLogMessage(date: 2020-01-22 16:16:38 +0000, level: Logging.Logger.Level.trace, message: Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)]))), metadata: Optional(["label": /system/cluster/gossip, "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 4
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
        uniqueNode:sact://second@localhost:9002 @ 4
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))), "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)])))]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "receiveGossip(_:envelope:)", line: 88)
    CapturedLogMessage(date: 2020-01-22 16:16:38 +0000, level: Logging.Logger.Level.info, message: KEEP VERSION >>> Optional([uniqueNode:sact://third@localhost:9003: 6, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://second@localhost:9002: 5])
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 4
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
        uniqueNode:sact://second@localhost:9002 @ 4
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShellState.swift", function: "latestGossip", line: 74)
    CapturedLogMessage(date: 2020-01-22 16:16:38 +0000, level: Logging.Logger.Level.trace, message: Local membership version is [.concurrent] to incoming gossip; Merge resulted in 0 changes., metadata: Optional(["gossip/now": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), "membership/changes": [], "tag": membership, "label": /system/cluster, "gossip/incoming": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)])), "gossip/before": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 4
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
        uniqueNode:sact://second@localhost:9002 @ 4
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift", function: "receiveMembershipGossip(_:_:gossip:)", line: 501)
    CapturedLogMessage(date: 2020-01-22 16:16:38 +0000, level: Logging.Logger.Level.info, message: NO CONVERGENCE no leader actions, Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShellState.swift", function: "collectLeaderActions()", line: 502)
    CapturedLogMessage(date: 2020-01-22 16:16:38 +0000, level: Logging.Logger.Level.debug, message: Attempted associating with already associated node: [sact://third@localhost:9003], existing association: [associated(AssociatedState(channel: SocketChannel { BaseSocket { fd=51 }, active = true, localAddress = Optional([IPv4]127.0.0.1/127.0.0.1:9001), remoteAddress = Optional([IPv4]127.0.0.1/127.0.0.1:57073) }, selfNode: sact://first@localhost:9001, remoteNode: sact://third@localhost:9003))], metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift", function: "beginHandshake(_:_:with:replyTo:)", line: 579)
    CapturedLogMessage(date: 2020-01-22 16:16:38 +0000, level: Logging.Logger.Level.debug, message: Associated sact://third@localhost:9003, informing SWIM to monitor this node., metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift", function: "onInitJoin(_:state:joining:)", line: 959)
    CapturedLogMessage(date: 2020-01-22 16:16:39 +0000, level: Logging.Logger.Level.info, message: Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://second@localhost:9002/system/cluster/gossip), metadata: Optional(["gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip, sact://second:490321953@localhost:9002/system/cluster/gossip], "label": /system/cluster/gossip, "gossip/peerCount": 2, "gossip/target": sact://second@localhost:9002/system/cluster/gossip, "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "sendGossip(_:to:)", line: 129)
    CapturedLogMessage(date: 2020-01-22 16:16:39 +0000, level: Logging.Logger.Level.trace, message: Schedule next gossip round in 1s, metadata: Optional(["label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "scheduleNextGossipRound(context:)", line: 142)
    CapturedLogMessage(date: 2020-01-22 16:16:39 +0000, level: Logging.Logger.Level.trace, message: Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 2
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://third@localhost:9003 @ 2
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)]))), metadata: Optional(["label": /system/cluster/gossip, "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))), "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 2
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://third@localhost:9003 @ 2
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)])))]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "receiveGossip(_:envelope:)", line: 88)
    CapturedLogMessage(date: 2020-01-22 16:16:39 +0000, level: Logging.Logger.Level.info, message: KEEP VERSION >>> Optional([uniqueNode:sact://third@localhost:9003: 6, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://second@localhost:9002: 5])
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 2
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShellState.swift", function: "latestGossip", line: 74)
    CapturedLogMessage(date: 2020-01-22 16:16:39 +0000, level: Logging.Logger.Level.trace, message: Local membership version is [.happenedAfter] to incoming gossip; Merge resulted in 0 changes., metadata: Optional(["tag": membership, "membership/changes": [], "label": /system/cluster, "gossip/now": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 2
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), "gossip/before": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), "gossip/incoming": Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 2
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://third@localhost:9003 @ 2
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)]))]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift", function: "receiveMembershipGossip(_:_:gossip:)", line: 501)
    CapturedLogMessage(date: 2020-01-22 16:16:39 +0000, level: Logging.Logger.Level.info, message: NO CONVERGENCE no leader actions, Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 2
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShellState.swift", function: "collectLeaderActions()", line: 502)
    CapturedLogMessage(date: 2020-01-22 16:16:40 +0000, level: Logging.Logger.Level.info, message: Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://second@localhost:9002/system/cluster/gossip), metadata: Optional(["gossip/target": sact://second@localhost:9002/system/cluster/gossip, "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip, sact://second:490321953@localhost:9002/system/cluster/gossip], "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 2
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))), "gossip/peerCount": 2, "label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "sendGossip(_:to:)", line: 129)
    CapturedLogMessage(date: 2020-01-22 16:16:40 +0000, level: Logging.Logger.Level.trace, message: Schedule next gossip round in 1s, metadata: Optional(["label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "scheduleNextGossipRound(context:)", line: 142)
    CapturedLogMessage(date: 2020-01-22 16:16:40 +0000, level: Logging.Logger.Level.trace, message: Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable)]))), metadata: Optional(["actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable)]))), "label": /system/cluster/gossip, "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 2
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "receiveGossip(_:envelope:)", line: 88)
    CapturedLogMessage(date: 2020-01-22 16:16:40 +0000, level: Logging.Logger.Level.info, message: KEEP VERSION >>> Optional([uniqueNode:sact://third@localhost:9003: 6, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://second@localhost:9002: 5])
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 2
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShellState.swift", function: "latestGossip", line: 74)
    CapturedLogMessage(date: 2020-01-22 16:16:40 +0000, level: Logging.Logger.Level.trace, message: Local membership version is [.same] to incoming gossip; Merge resulted in 0 changes., metadata: Optional(["label": /system/cluster, "tag": membership, "gossip/before": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 2
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), "membership/changes": [], "gossip/incoming": Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable)])), "gossip/now": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift", function: "receiveMembershipGossip(_:_:gossip:)", line: 501)
    CapturedLogMessage(date: 2020-01-22 16:16:40 +0000, level: Logging.Logger.Level.info, message: CONVERGENCE leader actions.... Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShellState.swift", function: "collectLeaderActions()", line: 506)
    CapturedLogMessage(date: 2020-01-22 16:16:40 +0000, level: Logging.Logger.Level.trace, message: Leadership actions upon gossip: [DistributedActors.ClusterShellState.LeaderAction.moveMember(sact://third@localhost:9003 :: [joining] -> [     up])], metadata: Optional(["label": /system/cluster, "tag": membership]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift", function: "receiveMembershipGossip(_:_:gossip:)", line: 520)
    CapturedLogMessage(date: 2020-01-22 16:16:40 +0000, level: Logging.Logger.Level.info, message: KEEP VERSION >>> Optional([uniqueNode:sact://third@localhost:9003: 6, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://second@localhost:9002: 5])
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShellState.swift", function: "latestGossip", line: 74)
    CapturedLogMessage(date: 2020-01-22 16:16:40 +0000, level: Logging.Logger.Level.info, message: Leader moving member: Cluster.MembershipChange(node: sact://third@localhost:9003, replaced: [nil], fromStatus: joining, toStatus: up), metadata: Optional(["leader/interpret/location": /Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift:524, "label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift", function: "interpretLeaderActions(_:_:file:line:)", line: 736)
    CapturedLogMessage(date: 2020-01-22 16:16:40 +0000, level: Logging.Logger.Level.trace, message: Published event membershipChange(sact://third@localhost:9003 :: [joining] -> [     up]) to 4 subscribers, metadata: Optional(["eventStream/subscribers": ["/system/replicator/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/leadership", "/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y"], "label": /system/clusterEvents]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterEventStream.swift", function: "behavior", line: 60)
    CapturedLogMessage(date: 2020-01-22 16:16:40 +0000, level: Logging.Logger.Level.trace, message: Downing strategy reaction to membershipChange(sact://third@localhost:9003 :: [joining] -> [     up]) resulted in: none, metadata: Optional(["label": /system/cluster/downingStrategy, "downing/strategy": TimeoutBasedDowningStrategy, "tag": downing]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/DowningStrategy/DowningStrategy.swift", function: "receiveClusterEvent(_:event:)", line: 76)
    CapturedLogMessage(date: 2020-01-22 16:16:41 +0000, level: Logging.Logger.Level.info, message: Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://second@localhost:9002/system/cluster/gossip), metadata: Optional(["gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip, sact://second:490321953@localhost:9002/system/cluster/gossip], "gossip/target": sact://second@localhost:9002/system/cluster/gossip, "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))), "gossip/peerCount": 2, "label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "sendGossip(_:to:)", line: 129)
    CapturedLogMessage(date: 2020-01-22 16:16:41 +0000, level: Logging.Logger.Level.trace, message: Schedule next gossip round in 1s, metadata: Optional(["label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "scheduleNextGossipRound(context:)", line: 142)
    CapturedLogMessage(date: 2020-01-22 16:16:41 +0000, level: Logging.Logger.Level.trace, message: Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable)]))), metadata: Optional(["gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))), "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable)]))), "label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "receiveGossip(_:envelope:)", line: 88)
    CapturedLogMessage(date: 2020-01-22 16:16:41 +0000, level: Logging.Logger.Level.info, message: KEEP VERSION >>> Optional([uniqueNode:sact://third@localhost:9003: 6, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://second@localhost:9002: 5])
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShellState.swift", function: "latestGossip", line: 74)
    CapturedLogMessage(date: 2020-01-22 16:16:41 +0000, level: Logging.Logger.Level.trace, message: Local membership version is [.same] to incoming gossip; Merge resulted in 0 changes., metadata: Optional(["label": /system/cluster, "tag": membership, "membership/changes": [], "gossip/before": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), "gossip/now": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), "gossip/incoming": Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable)]))]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift", function: "receiveMembershipGossip(_:_:gossip:)", line: 501)
    CapturedLogMessage(date: 2020-01-22 16:16:41 +0000, level: Logging.Logger.Level.info, message: NO CONVERGENCE no leader actions, Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShellState.swift", function: "collectLeaderActions()", line: 502)
    CapturedLogMessage(date: 2020-01-22 16:16:42 +0000, level: Logging.Logger.Level.info, message: Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://second@localhost:9002/system/cluster/gossip), metadata: Optional(["gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip, sact://second:490321953@localhost:9002/system/cluster/gossip], "gossip/target": sact://second@localhost:9002/system/cluster/gossip, "label": /system/cluster/gossip, "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))), "gossip/peerCount": 2]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "sendGossip(_:to:)", line: 129)
    CapturedLogMessage(date: 2020-01-22 16:16:42 +0000, level: Logging.Logger.Level.trace, message: Schedule next gossip round in 1s, metadata: Optional(["label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "scheduleNextGossipRound(context:)", line: 142)
    CapturedLogMessage(date: 2020-01-22 16:16:42 +0000, level: Logging.Logger.Level.trace, message: Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))), metadata: Optional(["actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))), "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))), "label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "receiveGossip(_:envelope:)", line: 88)
    CapturedLogMessage(date: 2020-01-22 16:16:42 +0000, level: Logging.Logger.Level.info, message: KEEP VERSION >>> Optional([uniqueNode:sact://third@localhost:9003: 6, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://second@localhost:9002: 5])
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShellState.swift", function: "latestGossip", line: 74)
    CapturedLogMessage(date: 2020-01-22 16:16:42 +0000, level: Logging.Logger.Level.trace, message: Local membership version is [.same] to incoming gossip; Merge resulted in 0 changes., metadata: Optional(["label": /system/cluster, "tag": membership, "gossip/before": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), "membership/changes": [], "gossip/now": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), "gossip/incoming": Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift", function: "receiveMembershipGossip(_:_:gossip:)", line: 501)
    CapturedLogMessage(date: 2020-01-22 16:16:42 +0000, level: Logging.Logger.Level.info, message: NO CONVERGENCE no leader actions, Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShellState.swift", function: "collectLeaderActions()", line: 502)
    CapturedLogMessage(date: 2020-01-22 16:16:43 +0000, level: Logging.Logger.Level.info, message: Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip), metadata: Optional(["actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))), "gossip/peerCount": 2, "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip, sact://second:490321953@localhost:9002/system/cluster/gossip], "gossip/target": sact://third@localhost:9003/system/cluster/gossip, "label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "sendGossip(_:to:)", line: 129)
    CapturedLogMessage(date: 2020-01-22 16:16:43 +0000, level: Logging.Logger.Level.trace, message: Schedule next gossip round in 1s, metadata: Optional(["label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "scheduleNextGossipRound(context:)", line: 142)
    CapturedLogMessage(date: 2020-01-22 16:16:43 +0000, level: Logging.Logger.Level.trace, message: Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable)]))), metadata: Optional(["actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable)]))), "label": /system/cluster/gossip, "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "receiveGossip(_:envelope:)", line: 88)
    CapturedLogMessage(date: 2020-01-22 16:16:43 +0000, level: Logging.Logger.Level.info, message: KEEP VERSION >>> Optional([uniqueNode:sact://third@localhost:9003: 6, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://second@localhost:9002: 5])
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShellState.swift", function: "latestGossip", line: 74)
    CapturedLogMessage(date: 2020-01-22 16:16:43 +0000, level: Logging.Logger.Level.trace, message: Local membership version is [.same] to incoming gossip; Merge resulted in 0 changes., metadata: Optional(["tag": membership, "gossip/incoming": Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable)])), "gossip/before": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), "label": /system/cluster, "membership/changes": [], "gossip/now": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift", function: "receiveMembershipGossip(_:_:gossip:)", line: 501)
    CapturedLogMessage(date: 2020-01-22 16:16:43 +0000, level: Logging.Logger.Level.info, message: NO CONVERGENCE no leader actions, Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShellState.swift", function: "collectLeaderActions()", line: 502)
    CapturedLogMessage(date: 2020-01-22 16:16:43 +0000, level: Logging.Logger.Level.info, message: KEEP VERSION >>> Optional([uniqueNode:sact://third@localhost:9003: 6, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://second@localhost:9002: 5])
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShellState.swift", function: "latestGossip", line: 74)
    CapturedLogMessage(date: 2020-01-22 16:16:43 +0000, level: Logging.Logger.Level.info, message: Cluster membership change: [sact://second@localhost:9002 :: [     up] -> [   down]], membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]), metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift", function: "onDownCommand(_:state:member:)", line: 1000)
    CapturedLogMessage(date: 2020-01-22 16:16:43 +0000, level: Logging.Logger.Level.trace, message: Published event membershipChange(sact://second@localhost:9002 :: [     up] -> [   down]) to 4 subscribers, metadata: Optional(["eventStream/subscribers": ["/system/replicator/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/leadership", "/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y"], "label": /system/clusterEvents]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterEventStream.swift", function: "behavior", line: 60)
    CapturedLogMessage(date: 2020-01-22 16:16:43 +0000, level: Logging.Logger.Level.info, message: KEEP VERSION >>> Optional([uniqueNode:sact://third@localhost:9003: 6, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://second@localhost:9002: 5])
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])), metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShellState.swift", function: "latestGossip", line: 74)
    CapturedLogMessage(date: 2020-01-22 16:16:43 +0000, level: Logging.Logger.Level.trace, message: Finish association with sact://second@localhost:9002, yet node not in membership already?, metadata: Optional(["label": /system/cluster]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift", function: "finishTerminateAssociation(_:state:removalDirective:)", line: 138)
    CapturedLogMessage(date: 2020-01-22 16:16:43 +0000, level: Logging.Logger.Level.trace, message: Peer terminated: sact://second@localhost:9002/system/cluster/gossip, will not gossip to it anymore, metadata: Optional(["label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "behavior", line: 63)
    CapturedLogMessage(date: 2020-01-22 16:16:44 +0000, level: Logging.Logger.Level.info, message: Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip), metadata: Optional(["gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip], "gossip/target": sact://third@localhost:9003/system/cluster/gossip, "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))), "gossip/peerCount": 1, "label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "sendGossip(_:to:)", line: 129)
    CapturedLogMessage(date: 2020-01-22 16:16:44 +0000, level: Logging.Logger.Level.trace, message: Schedule next gossip round in 1s, metadata: Optional(["label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "scheduleNextGossipRound(context:)", line: 142)
    CapturedLogMessage(date: 2020-01-22 16:16:45 +0000, level: Logging.Logger.Level.info, message: Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip), metadata: Optional(["gossip/target": sact://third@localhost:9003/system/cluster/gossip, "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip], "gossip/peerCount": 1, "label": /system/cluster/gossip, "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "sendGossip(_:to:)", line: 129)
    CapturedLogMessage(date: 2020-01-22 16:16:45 +0000, level: Logging.Logger.Level.trace, message: Schedule next gossip round in 1s, metadata: Optional(["label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "scheduleNextGossipRound(context:)", line: 142)
    CapturedLogMessage(date: 2020-01-22 16:16:46 +0000, level: Logging.Logger.Level.info, message: Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip), metadata: Optional(["label": /system/cluster/gossip, "gossip/peerCount": 1, "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip], "gossip/target": sact://third@localhost:9003/system/cluster/gossip, "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "sendGossip(_:to:)", line: 129)
    CapturedLogMessage(date: 2020-01-22 16:16:46 +0000, level: Logging.Logger.Level.trace, message: Schedule next gossip round in 1s, metadata: Optional(["label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "scheduleNextGossipRound(context:)", line: 142)
    CapturedLogMessage(date: 2020-01-22 16:16:47 +0000, level: Logging.Logger.Level.info, message: Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip), metadata: Optional(["gossip/target": sact://third@localhost:9003/system/cluster/gossip, "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))), "label": /system/cluster/gossip, "gossip/peerCount": 1, "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip]]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "sendGossip(_:to:)", line: 129)
    CapturedLogMessage(date: 2020-01-22 16:16:47 +0000, level: Logging.Logger.Level.trace, message: Schedule next gossip round in 1s, metadata: Optional(["label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "scheduleNextGossipRound(context:)", line: 142)
    CapturedLogMessage(date: 2020-01-22 16:16:48 +0000, level: Logging.Logger.Level.info, message: Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip), metadata: Optional(["actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))), "label": /system/cluster/gossip, "gossip/target": sact://third@localhost:9003/system/cluster/gossip, "gossip/peerCount": 1, "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip]]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "sendGossip(_:to:)", line: 129)
    CapturedLogMessage(date: 2020-01-22 16:16:48 +0000, level: Logging.Logger.Level.trace, message: Schedule next gossip round in 1s, metadata: Optional(["label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "scheduleNextGossipRound(context:)", line: 142)
    CapturedLogMessage(date: 2020-01-22 16:16:49 +0000, level: Logging.Logger.Level.info, message: Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip), metadata: Optional(["gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip], "label": /system/cluster/gossip, "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))), "gossip/peerCount": 1, "gossip/target": sact://third@localhost:9003/system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "sendGossip(_:to:)", line: 129)
    CapturedLogMessage(date: 2020-01-22 16:16:49 +0000, level: Logging.Logger.Level.trace, message: Schedule next gossip round in 1s, metadata: Optional(["label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "scheduleNextGossipRound(context:)", line: 142)
    CapturedLogMessage(date: 2020-01-22 16:16:50 +0000, level: Logging.Logger.Level.info, message: Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip), metadata: Optional(["label": /system/cluster/gossip, "gossip/target": sact://third@localhost:9003/system/cluster/gossip, "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))), "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip], "gossip/peerCount": 1]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "sendGossip(_:to:)", line: 129)
    CapturedLogMessage(date: 2020-01-22 16:16:50 +0000, level: Logging.Logger.Level.trace, message: Schedule next gossip round in 1s, metadata: Optional(["label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "scheduleNextGossipRound(context:)", line: 142)
    CapturedLogMessage(date: 2020-01-22 16:16:52 +0000, level: Logging.Logger.Level.info, message: Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip), metadata: Optional(["gossip/peerCount": 1, "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))), "gossip/target": sact://third@localhost:9003/system/cluster/gossip, "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip], "label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "sendGossip(_:to:)", line: 129)
    CapturedLogMessage(date: 2020-01-22 16:16:52 +0000, level: Logging.Logger.Level.trace, message: Schedule next gossip round in 1s, metadata: Optional(["label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "scheduleNextGossipRound(context:)", line: 142)
    CapturedLogMessage(date: 2020-01-22 16:16:53 +0000, level: Logging.Logger.Level.info, message: Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip), metadata: Optional(["gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip], "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))), "label": /system/cluster/gossip, "gossip/peerCount": 1, "gossip/target": sact://third@localhost:9003/system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "sendGossip(_:to:)", line: 129)
    CapturedLogMessage(date: 2020-01-22 16:16:53 +0000, level: Logging.Logger.Level.trace, message: Schedule next gossip round in 1s, metadata: Optional(["label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "scheduleNextGossipRound(context:)", line: 142)
    CapturedLogMessage(date: 2020-01-22 16:16:54 +0000, level: Logging.Logger.Level.info, message: Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip), metadata: Optional(["gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip], "gossip/peerCount": 1, "label": /system/cluster/gossip, "gossip/target": sact://third@localhost:9003/system/cluster/gossip, "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "sendGossip(_:to:)", line: 129)
    CapturedLogMessage(date: 2020-01-22 16:16:54 +0000, level: Logging.Logger.Level.trace, message: Schedule next gossip round in 1s, metadata: Optional(["label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "scheduleNextGossipRound(context:)", line: 142)
    CapturedLogMessage(date: 2020-01-22 16:16:55 +0000, level: Logging.Logger.Level.info, message: Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip), metadata: Optional(["gossip/target": sact://third@localhost:9003/system/cluster/gossip, "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip], "label": /system/cluster/gossip, "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))), "gossip/peerCount": 1]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "sendGossip(_:to:)", line: 129)
    CapturedLogMessage(date: 2020-01-22 16:16:55 +0000, level: Logging.Logger.Level.trace, message: Schedule next gossip round in 1s, metadata: Optional(["label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "scheduleNextGossipRound(context:)", line: 142)
    CapturedLogMessage(date: 2020-01-22 16:16:56 +0000, level: Logging.Logger.Level.info, message: Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip), metadata: Optional(["gossip/peerCount": 1, "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))), "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip], "label": /system/cluster/gossip, "gossip/target": sact://third@localhost:9003/system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "sendGossip(_:to:)", line: 129)
    CapturedLogMessage(date: 2020-01-22 16:16:56 +0000, level: Logging.Logger.Level.trace, message: Schedule next gossip round in 1s, metadata: Optional(["label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "scheduleNextGossipRound(context:)", line: 142)
    CapturedLogMessage(date: 2020-01-22 16:16:57 +0000, level: Logging.Logger.Level.info, message: Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip), metadata: Optional(["gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip], "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))), "label": /system/cluster/gossip, "gossip/peerCount": 1, "gossip/target": sact://third@localhost:9003/system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "sendGossip(_:to:)", line: 129)
    CapturedLogMessage(date: 2020-01-22 16:16:57 +0000, level: Logging.Logger.Level.trace, message: Schedule next gossip round in 1s, metadata: Optional(["label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "scheduleNextGossipRound(context:)", line: 142)
    CapturedLogMessage(date: 2020-01-22 16:16:58 +0000, level: Logging.Logger.Level.info, message: Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip), metadata: Optional(["gossip/target": sact://third@localhost:9003/system/cluster/gossip, "gossip/peerCount": 1, "label": /system/cluster/gossip, "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))), "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip]]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "sendGossip(_:to:)", line: 129)
    CapturedLogMessage(date: 2020-01-22 16:16:58 +0000, level: Logging.Logger.Level.trace, message: Schedule next gossip round in 1s, metadata: Optional(["label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "scheduleNextGossipRound(context:)", line: 142)
    CapturedLogMessage(date: 2020-01-22 16:16:59 +0000, level: Logging.Logger.Level.info, message: Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip), metadata: Optional(["label": /system/cluster/gossip, "gossip/peerCount": 1, "gossip/target": sact://third@localhost:9003/system/cluster/gossip, "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip], "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "sendGossip(_:to:)", line: 129)
    CapturedLogMessage(date: 2020-01-22 16:16:59 +0000, level: Logging.Logger.Level.trace, message: Schedule next gossip round in 1s, metadata: Optional(["label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "scheduleNextGossipRound(context:)", line: 142)
    CapturedLogMessage(date: 2020-01-22 16:17:00 +0000, level: Logging.Logger.Level.info, message: Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip), metadata: Optional(["gossip/target": sact://third@localhost:9003/system/cluster/gossip, "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip], "label": /system/cluster/gossip, "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))), "gossip/peerCount": 1]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "sendGossip(_:to:)", line: 129)
    CapturedLogMessage(date: 2020-01-22 16:17:00 +0000, level: Logging.Logger.Level.trace, message: Schedule next gossip round in 1s, metadata: Optional(["label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "scheduleNextGossipRound(context:)", line: 142)
    CapturedLogMessage(date: 2020-01-22 16:17:01 +0000, level: Logging.Logger.Level.info, message: Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip), metadata: Optional(["gossip/target": sact://third@localhost:9003/system/cluster/gossip, "gossip/peerCount": 1, "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip], "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))), "label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "sendGossip(_:to:)", line: 129)
    CapturedLogMessage(date: 2020-01-22 16:17:01 +0000, level: Logging.Logger.Level.trace, message: Schedule next gossip round in 1s, metadata: Optional(["label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "scheduleNextGossipRound(context:)", line: 142)
    CapturedLogMessage(date: 2020-01-22 16:17:02 +0000, level: Logging.Logger.Level.info, message: Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip), metadata: Optional(["label": /system/cluster/gossip, "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip], "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))), "gossip/target": sact://third@localhost:9003/system/cluster/gossip, "gossip/peerCount": 1]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "sendGossip(_:to:)", line: 129)
    CapturedLogMessage(date: 2020-01-22 16:17:02 +0000, level: Logging.Logger.Level.trace, message: Schedule next gossip round in 1s, metadata: Optional(["label": /system/cluster/gossip]), file: "/Users/ktoso/code/actors/Sources/DistributedActors/Pattern/ConvergentGossip.swift", function: "scheduleNextGossipRound(context:)", line: 142)

at /Users/ktoso/code/actors/Tests/DistributedActorsTests/Cluster/DowningStrategy/DowningClusteredTests.swift:141
<unknown>:0: error: -[DistributedActorsTests.DowningClusteredTests test_downingNode_eventuallyResultsInRemovalFromGossip] : failed: caught error: The operation couldn’t be completed. (DistributedActorsTestKit.ShouldMatcherError error 1.)
------------------------------------- ActorSystem(first, sact://first@localhost:9001) ------------------------------------------------
Captured log [first][2020-01-23 1:16:36.9150] [ActorShell+Children.swift:345][/system/cluster] [debug] Spawning [DistributedActors.Behavior<DistributedActors.SWIM.Message>.setup((Function))], on path: [/system/cluster/swim]
Captured log [first][2020-01-23 1:16:36.9150] [ClusterEventStream.swift:43][/system/clusterEvents] [trace] Successfully subscribed [ActorRef<Cluster.Event>(/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y)], offering membership snapshot
Captured log [first][2020-01-23 1:16:36.9160] [ClusterEventStream.swift:43][/system/clusterEvents] [trace] Successfully subscribed [ActorRef<Cluster.Event>(/system/replicator/$sub-DistributedActors.Cluster.Event-y)], offering membership snapshot
Captured log [first][2020-01-23 1:16:36.9160] [ActorShell+Children.swift:345][/system/cluster] [debug] Spawning [DistributedActors.Behavior<DistributedActors.Cluster.Event>.setup((Function))], on path: [/system/cluster/leadership]
Captured log [first][2020-01-23 1:16:36.9170] [Leadership.swift:136][/system/cluster/leadership] [trace] Spawned /system/cluster/leadership to run LowestReachableMember(minimumNumberOfMembersToDecide: 2, loseLeadershipIfBelowMinNrOfMembers: false)
Captured log [first][2020-01-23 1:16:36.9170] [ActorShell+Children.swift:345][/system/cluster] [debug] Spawning [DistributedActors.Behavior<DistributedActors.DowningStrategyMessage>.setup((Function))], on path: [/system/cluster/downingStrategy]
Captured log [first][2020-01-23 1:16:36.9170] [ClusterShell.swift:355][/system/cluster] [info] Binding to: [sact://first@localhost:9001]
Captured log [first][2020-01-23 1:16:36.9170] [ClusterEventStream.swift:43][/system/clusterEvents] [trace] Successfully subscribed [ActorRef<Cluster.Event>(/system/cluster/leadership)], offering membership snapshot
Captured log [first][2020-01-23 1:16:36.9170] [ClusterEventStream.swift:43][/system/clusterEvents] [trace] Successfully subscribed [ActorRef<Cluster.Event>(/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y)], offering membership snapshot
Captured log [first][2020-01-23 1:16:36.9180] [Leadership.swift:264][/system/cluster/leadership] [info] Not enough members [1/2] to run election, members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)]
Captured log [first][2020-01-23 1:16:36.9180] [DowningStrategy.swift:76][/system/cluster/downingStrategy] [trace] Downing strategy reaction to snapshot(Membership(count: 0, leader: [.none], members: [])) resulted in: none
// metadata:
// "downing/strategy": TimeoutBasedDowningStrategy
// "tag": downing
Captured log [first][2020-01-23 1:16:36.9220] [ClusterShell.swift:366][/system/cluster] [info] Bound to [IPv4]127.0.0.1/127.0.0.1:9001
Captured log [first][2020-01-23 1:16:36.9230] [ActorShell+Children.swift:345][/system/cluster] [debug] Spawning [DistributedActors.Behavior<DistributedActors.ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>.setup((Function))], on path: [/system/cluster/gossip]
Captured log [first][2020-01-23 1:16:36.9230] [ConvergentGossip.swift:142][/system/cluster/gossip] [trace] Schedule next gossip round in 1s
Captured log [first][2020-01-23 1:16:36.9240] [ClusterShellState.swift:93][/system/cluster] [info] ACK  VERSION >>> [:] >>>> [uniqueNode:sact://first@localhost:9001: 1]
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
), membership: Membership(count: 0, leader: [.none], members: []))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 1
), membership: Membership(count: 1, leader: [.none], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)]))
RES: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 1
), membership: Membership(count: 1, leader: [.none], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)]))
Captured log [first][2020-01-23 1:16:36.9240] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.happenedBefore] to incoming gossip; Merge resulted in 1 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
// ), membership: Membership(count: 0, leader: [.none], members: []))
// "gossip/incoming": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 1
// ), membership: Membership(count: 1, leader: [.none], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)]))
// "gossip/now": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 1
// ), membership: Membership(count: 1, leader: [.none], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)]))
// "membership/changes": ["Cluster.MembershipChange(node: sact://first@localhost:9001, replaced: [nil], fromStatus: joining, toStatus: joining)"]
// "tag": membership
Captured log [first][2020-01-23 1:16:36.9250] [ClusterShell.swift:627][/system/cluster] [info] Extending handshake offer to sact://second@localhost:9002)
Captured log [first][2020-01-23 1:16:36.9250] [Leadership.swift:264][/system/cluster/leadership] [info] Not enough members [1/2] to run election, members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)]
Captured log [first][2020-01-23 1:16:36.9250] [DowningStrategy.swift:76][/system/cluster/downingStrategy] [trace] Downing strategy reaction to membershipChange(sact://first@localhost:9001 :: [joining] -> [joining]) resulted in: none
// metadata:
// "downing/strategy": TimeoutBasedDowningStrategy
// "tag": downing
Captured log [first][2020-01-23 1:16:36.9250] [ClusterEventStream.swift:60][/system/clusterEvents] [trace] Published event membershipChange(sact://first@localhost:9001 :: [joining] -> [joining]) to 4 subscribers
// metadata:
// "eventStream/subscribers": ["/system/replicator/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/leadership", "/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y"]
Captured log [first][2020-01-23 1:16:36.9320] [ClusterShellState.swift:85][/system/cluster] [info] BUMP VERSION >>> [uniqueNode:sact://first@localhost:9001: 1] >>>> [uniqueNode:sact://first@localhost:9001: 2]
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 1
), membership: Membership(count: 1, leader: [.none], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)]))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 1
), membership: Membership(count: 2, leader: [.none], members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)]))
RES: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
), membership: Membership(count: 2, leader: [.none], members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)]))
Captured log [first][2020-01-23 1:16:36.9320] [ClusterShell.swift:824][/system/cluster] [debug] Associated with: [sact://second:490321953@localhost:9002]; Membership change: Cluster.MembershipChange(node: sact://second@localhost:9002, replaced: [nil], fromStatus: nil, toStatus: joining), resulting in: Membership(count: 2, leader: [.none], members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)])
Captured log [first][2020-01-23 1:16:36.9320] [ClusterEventStream.swift:60][/system/clusterEvents] [trace] Published event membershipChange(sact://second@localhost:9002 :: [unknown] -> [joining]) to 4 subscribers
// metadata:
// "eventStream/subscribers": ["/system/replicator/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/leadership", "/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y"]
Captured log [first][2020-01-23 1:16:36.9320] [DowningStrategy.swift:76][/system/cluster/downingStrategy] [trace] Downing strategy reaction to membershipChange(sact://second@localhost:9002 :: [unknown] -> [joining]) resulted in: none
// metadata:
// "downing/strategy": TimeoutBasedDowningStrategy
// "tag": downing
Captured log [first][2020-01-23 1:16:36.9320] [Leadership.swift:321][/system/cluster/leadership] [debug] Selected new leader: [[nil] -> [Member(sact://first@localhost:9001, status: joining, reachability: reachable)]]
// metadata:
// "membership": Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)])
Captured log [first][2020-01-23 1:16:36.9320] [ClusterShell.swift:959][/system/cluster] [debug] Associated sact://second@localhost:9002, informing SWIM to monitor this node.
Captured log [first][2020-01-23 1:16:36.9320] [ConvergentGossip.swift:75][/system/cluster/gossip] [trace] Got introduced to peer [ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://second@localhost:9002/system/cluster/gossip)], pushing initial gossip immediately
// metadata:
// "gossip/peerCount": 1
// "gossip/peers": [sact://second:490321953@localhost:9002/system/cluster/gossip]
Captured log [first][2020-01-23 1:16:36.9330] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://second@localhost:9002/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 2
// ), membership: Membership(count: 2, leader: [.none], members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)])))
// "gossip/peerCount": 1
// "gossip/peers": [sact://second:490321953@localhost:9002/system/cluster/gossip]
// "gossip/target": sact://second@localhost:9002/system/cluster/gossip
Captured log [first][2020-01-23 1:16:36.9330] [ClusterShellState.swift:85][/system/cluster] [info] BUMP VERSION >>> [uniqueNode:sact://first@localhost:9001: 2] >>>> [uniqueNode:sact://first@localhost:9001: 3]
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
), membership: Membership(count: 2, leader: [.none], members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)]))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)]))
RES: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 3
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)]))
Captured log [first][2020-01-23 1:16:36.9330] [ClusterShellState.swift:445][/system/cluster] [info] Leader change: LeadershipChange(oldLeader: nil, newLeader: Optional(Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)))
// metadata:
// "membership/count": 2
Captured log [first][2020-01-23 1:16:36.9330] [ClusterShellState.swift:506][/system/cluster] [info] CONVERGENCE leader actions.... Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 3
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)]))
Captured log [first][2020-01-23 1:16:36.9340] [ClusterShellState.swift:483][/system/cluster] [trace] Membership updated Membership sact://first@localhost:9001:
  LEADER: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)]
  [sact://first:2644199270@localhost:9001] STATUS: [joining]
  [sact://second:490321953@localhost:9002] STATUS: [joining],
  by leadershipChange(DistributedActors.Cluster.LeadershipChange(oldLeader: nil, newLeader: Optional(Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable))))
Captured log [first][2020-01-23 1:16:36.9340] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://first@localhost:9001: 3])
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 3
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)]))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 3
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)]))
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958715]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958721]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/gossip
Captured log [first][2020-01-23 1:16:36.9340] [ClusterShell.swift:736][/system/cluster] [info] Leader moving member: Cluster.MembershipChange(node: sact://second@localhost:9002, replaced: [nil], fromStatus: joining, toStatus: up)
// metadata:
// "leader/interpret/location": /Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift:476
Captured log [first][2020-01-23 1:16:36.9350] [ClusterEventStream.swift:60][/system/clusterEvents] [trace] Published event membershipChange(sact://second@localhost:9002 :: [joining] -> [     up]) to 4 subscribers
// metadata:
// "eventStream/subscribers": ["/system/replicator/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/leadership", "/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y"]
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958769]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/user/$ask-6
Captured log [first][2020-01-23 1:16:36.9350] [DowningStrategy.swift:76][/system/cluster/downingStrategy] [trace] Downing strategy reaction to membershipChange(sact://second@localhost:9002 :: [joining] -> [     up]) resulted in: none
// metadata:
// "downing/strategy": TimeoutBasedDowningStrategy
// "tag": downing
Captured log [first][2020-01-23 1:16:36.9350] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://first@localhost:9001: 3])
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 3
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)]))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 3
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
Captured log [first][2020-01-23 1:16:36.9350] [ClusterShell.swift:736][/system/cluster] [info] Leader moving member: Cluster.MembershipChange(node: sact://first@localhost:9001, replaced: [nil], fromStatus: joining, toStatus: up)
// metadata:
// "leader/interpret/location": /Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift:476
Captured log [first][2020-01-23 1:16:36.9350] [ClusterEventStream.swift:60][/system/clusterEvents] [trace] Published event membershipChange(sact://first@localhost:9001 :: [joining] -> [     up]) to 4 subscribers
// metadata:
// "eventStream/subscribers": ["/system/replicator/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/leadership", "/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y"]
Captured log [first][2020-01-23 1:16:36.9350] [DowningStrategy.swift:76][/system/cluster/downingStrategy] [trace] Downing strategy reaction to membershipChange(sact://first@localhost:9001 :: [joining] -> [     up]) resulted in: none
// metadata:
// "downing/strategy": TimeoutBasedDowningStrategy
// "tag": downing
Captured log [first][2020-01-23 1:16:36.9350] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://first@localhost:9001: 4])
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 3
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
Captured log [first][2020-01-23 1:16:36.9360] [ClusterEventStream.swift:60][/system/clusterEvents] [trace] Published event leadershipChange(DistributedActors.Cluster.LeadershipChange(oldLeader: nil, newLeader: Optional(Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)))) to 4 subscribers
// metadata:
// "eventStream/subscribers": ["/system/replicator/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/leadership", "/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y"]
Captured log [first][2020-01-23 1:16:36.9360] [DowningStrategy.swift:76][/system/cluster/downingStrategy] [trace] Downing strategy reaction to leadershipChange(DistributedActors.Cluster.LeadershipChange(oldLeader: nil, newLeader: Optional(Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)))) resulted in: none
// metadata:
// "downing/strategy": TimeoutBasedDowningStrategy
// "tag": downing
Captured log [first][2020-01-23 1:16:36.9370] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://second@localhost:9002 @ 2
), membership: Membership(count: 2, leader: [.none], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://second@localhost:9002 @ 2
// ), membership: Membership(count: 2, leader: [.none], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
// ), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
Captured log [first][2020-01-23 1:16:36.9380] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://first@localhost:9001: 4, uniqueNode:sact://second@localhost:9002: 2])
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://second@localhost:9002 @ 2
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
Captured log [first][2020-01-23 1:16:36.9380] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.concurrent] to incoming gossip; Merge resulted in 0 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
// ), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
// "gossip/incoming": Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://second@localhost:9002 @ 2
// ), membership: Membership(count: 2, leader: [.none], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)]))
// "gossip/now": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 2
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://second@localhost:9002 @ 2
// ), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
// "membership/changes": []
// "tag": membership
Captured log [first][2020-01-23 1:16:36.9380] [ClusterShellState.swift:502][/system/cluster] [info] NO CONVERGENCE no leader actions, Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://second@localhost:9002 @ 2
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
Captured log [first][2020-01-23 1:16:38.0170] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://second@localhost:9002/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 2
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://second@localhost:9002 @ 2
// ), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/peerCount": 1
// "gossip/peers": [sact://second:490321953@localhost:9002/system/cluster/gossip]
// "gossip/target": sact://second@localhost:9002/system/cluster/gossip
Captured log [first][2020-01-23 1:16:38.0170] [ConvergentGossip.swift:142][/system/cluster/gossip] [trace] Schedule next gossip round in 1s
Captured log [first][2020-01-23 1:16:38.0190] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
        uniqueNode:sact://second@localhost:9002 @ 4
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 2
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 2
//         uniqueNode:sact://second@localhost:9002 @ 4
// ), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 2
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://second@localhost:9002 @ 2
// ), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
Captured log [first][2020-01-23 1:16:38.0190] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://first@localhost:9001: 4, uniqueNode:sact://second@localhost:9002: 4])
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://second@localhost:9002 @ 2
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 4
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
        uniqueNode:sact://second@localhost:9002 @ 4
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
Captured log [first][2020-01-23 1:16:38.0200] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.concurrent] to incoming gossip; Merge resulted in 0 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 2
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://second@localhost:9002 @ 2
// ), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
// "gossip/incoming": Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 2
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 2
//         uniqueNode:sact://second@localhost:9002 @ 4
// ), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)]))
// "gossip/now": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 4
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 2
//         uniqueNode:sact://second@localhost:9002 @ 4
// ), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
// "membership/changes": []
// "tag": membership
Captured log [first][2020-01-23 1:16:38.0200] [ClusterShellState.swift:502][/system/cluster] [info] NO CONVERGENCE no leader actions, Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 4
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
        uniqueNode:sact://second@localhost:9002 @ 4
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
Captured log [first][2020-01-23 1:16:38.0850] [ClusterShell.swift:670][/system/cluster] [info] Accept association with [sact://third:448661589@localhost:9003]!
Captured log [first][2020-01-23 1:16:38.0860] [ClusterShellState.swift:85][/system/cluster] [info] BUMP VERSION >>> [uniqueNode:sact://first@localhost:9001: 4, uniqueNode:sact://second@localhost:9002: 4] >>>> [uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://second@localhost:9002: 4]
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 4
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
        uniqueNode:sact://second@localhost:9002 @ 4
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 4
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
        uniqueNode:sact://second@localhost:9002 @ 4
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
RES: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 4
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
        uniqueNode:sact://second@localhost:9002 @ 4
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
Captured log [first][2020-01-23 1:16:38.0860] [ClusterEventStream.swift:60][/system/clusterEvents] [trace] Published event membershipChange(sact://third@localhost:9003 :: [unknown] -> [joining]) to 4 subscribers
// metadata:
// "eventStream/subscribers": ["/system/replicator/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/leadership", "/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y"]
Captured log [first][2020-01-23 1:16:38.0860] [ClusterShellState.swift:502][/system/cluster] [info] NO CONVERGENCE no leader actions, Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 4
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
        uniqueNode:sact://second@localhost:9002 @ 4
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
Captured log [first][2020-01-23 1:16:38.0860] [DowningStrategy.swift:76][/system/cluster/downingStrategy] [trace] Downing strategy reaction to membershipChange(sact://third@localhost:9003 :: [unknown] -> [joining]) resulted in: none
// metadata:
// "downing/strategy": TimeoutBasedDowningStrategy
// "tag": downing
Captured log [first][2020-01-23 1:16:38.0870] [ConvergentGossip.swift:75][/system/cluster/gossip] [trace] Got introduced to peer [ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip)], pushing initial gossip immediately
// metadata:
// "gossip/peerCount": 2
// "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip, sact://second:490321953@localhost:9002/system/cluster/gossip]
Captured log [first][2020-01-23 1:16:38.0870] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 4
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 2
//         uniqueNode:sact://second@localhost:9002 @ 4
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/peerCount": 2
// "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip, sact://second:490321953@localhost:9002/system/cluster/gossip]
// "gossip/target": sact://third@localhost:9003/system/cluster/gossip
Captured log [first][2020-01-23 1:16:38.0900] [ClusterShell.swift:579][/system/cluster] [debug] Attempted associating with already associated node: [sact://third@localhost:9003], existing association: [associated(AssociatedState(channel: SocketChannel { BaseSocket { fd=51 }, active = true, localAddress = Optional([IPv4]127.0.0.1/127.0.0.1:9001), remoteAddress = Optional([IPv4]127.0.0.1/127.0.0.1:57073) }, selfNode: sact://first@localhost:9001, remoteNode: sact://third@localhost:9003))]
Captured log [first][2020-01-23 1:16:38.0920] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 2
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 4
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 2
//         uniqueNode:sact://second@localhost:9002 @ 4
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
Captured log [first][2020-01-23 1:16:38.0930] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://third@localhost:9003: 6, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://second@localhost:9002: 5])
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 4
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
        uniqueNode:sact://second@localhost:9002 @ 4
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
Captured log [first][2020-01-23 1:16:38.0940] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.concurrent] to incoming gossip; Merge resulted in 0 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 4
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 2
//         uniqueNode:sact://second@localhost:9002 @ 4
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
// "gossip/incoming": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 2
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)]))
// "gossip/now": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
// "membership/changes": []
// "tag": membership
Captured log [first][2020-01-23 1:16:38.0940] [ClusterShellState.swift:502][/system/cluster] [info] NO CONVERGENCE no leader actions, Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
Captured log [first][2020-01-23 1:16:38.1760] [ClusterShell.swift:579][/system/cluster] [debug] Attempted associating with already associated node: [sact://third@localhost:9003], existing association: [associated(AssociatedState(channel: SocketChannel { BaseSocket { fd=51 }, active = true, localAddress = Optional([IPv4]127.0.0.1/127.0.0.1:9001), remoteAddress = Optional([IPv4]127.0.0.1/127.0.0.1:57073) }, selfNode: sact://first@localhost:9001, remoteNode: sact://third@localhost:9003))]
Captured log [first][2020-01-23 1:16:38.1770] [ClusterShell.swift:959][/system/cluster] [debug] Associated sact://third@localhost:9003, informing SWIM to monitor this node.
Captured log [first][2020-01-23 1:16:39.0240] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://second@localhost:9002/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/peerCount": 2
// "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip, sact://second:490321953@localhost:9002/system/cluster/gossip]
// "gossip/target": sact://second@localhost:9002/system/cluster/gossip
Captured log [first][2020-01-23 1:16:39.0240] [ConvergentGossip.swift:142][/system/cluster/gossip] [trace] Schedule next gossip round in 1s
Captured log [first][2020-01-23 1:16:39.0270] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 2
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://third@localhost:9003 @ 2
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 2
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 2
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://third@localhost:9003 @ 2
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
Captured log [first][2020-01-23 1:16:39.0280] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://third@localhost:9003: 6, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://second@localhost:9002: 5])
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 2
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
Captured log [first][2020-01-23 1:16:39.0290] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.happenedAfter] to incoming gossip; Merge resulted in 0 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
// "gossip/incoming": Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 2
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 2
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://third@localhost:9003 @ 2
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)]))
// "gossip/now": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 2
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
// "membership/changes": []
// "tag": membership
Captured log [first][2020-01-23 1:16:39.0290] [ClusterShellState.swift:502][/system/cluster] [info] NO CONVERGENCE no leader actions, Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 2
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
Captured log [first][2020-01-23 1:16:40.1160] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://second@localhost:9002/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 2
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/peerCount": 2
// "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip, sact://second:490321953@localhost:9002/system/cluster/gossip]
// "gossip/target": sact://second@localhost:9002/system/cluster/gossip
Captured log [first][2020-01-23 1:16:40.1160] [ConvergentGossip.swift:142][/system/cluster/gossip] [trace] Schedule next gossip round in 1s
Captured log [first][2020-01-23 1:16:40.1190] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 2
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
Captured log [first][2020-01-23 1:16:40.1200] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://third@localhost:9003: 6, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://second@localhost:9002: 5])
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 2
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
Captured log [first][2020-01-23 1:16:40.1210] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.same] to incoming gossip; Merge resulted in 0 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 2
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
// "gossip/incoming": Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable)]))
// "gossip/now": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
// "membership/changes": []
// "tag": membership
Captured log [first][2020-01-23 1:16:40.1210] [ClusterShellState.swift:506][/system/cluster] [info] CONVERGENCE leader actions.... Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
Captured log [first][2020-01-23 1:16:40.1210] [ClusterShell.swift:520][/system/cluster] [trace] Leadership actions upon gossip: [DistributedActors.ClusterShellState.LeaderAction.moveMember(sact://third@localhost:9003 :: [joining] -> [     up])]
// metadata:
// "tag": membership
Captured log [first][2020-01-23 1:16:40.1220] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://third@localhost:9003: 6, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://second@localhost:9002: 5])
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
Captured log [first][2020-01-23 1:16:40.1220] [ClusterShell.swift:736][/system/cluster] [info] Leader moving member: Cluster.MembershipChange(node: sact://third@localhost:9003, replaced: [nil], fromStatus: joining, toStatus: up)
// metadata:
// "leader/interpret/location": /Users/ktoso/code/actors/Sources/DistributedActors/Cluster/ClusterShell.swift:524
Captured log [first][2020-01-23 1:16:40.1220] [ClusterEventStream.swift:60][/system/clusterEvents] [trace] Published event membershipChange(sact://third@localhost:9003 :: [joining] -> [     up]) to 4 subscribers
// metadata:
// "eventStream/subscribers": ["/system/replicator/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/leadership", "/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y"]
Captured log [first][2020-01-23 1:16:40.1220] [DowningStrategy.swift:76][/system/cluster/downingStrategy] [trace] Downing strategy reaction to membershipChange(sact://third@localhost:9003 :: [joining] -> [     up]) resulted in: none
// metadata:
// "downing/strategy": TimeoutBasedDowningStrategy
// "tag": downing
Captured log [first][2020-01-23 1:16:41.2120] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://second@localhost:9002/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/peerCount": 2
// "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip, sact://second:490321953@localhost:9002/system/cluster/gossip]
// "gossip/target": sact://second@localhost:9002/system/cluster/gossip
Captured log [first][2020-01-23 1:16:41.2130] [ConvergentGossip.swift:142][/system/cluster/gossip] [trace] Schedule next gossip round in 1s
Captured log [first][2020-01-23 1:16:41.2150] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
Captured log [first][2020-01-23 1:16:41.2160] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://third@localhost:9003: 6, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://second@localhost:9002: 5])
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
Captured log [first][2020-01-23 1:16:41.2170] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.same] to incoming gossip; Merge resulted in 0 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
// "gossip/incoming": Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable)]))
// "gossip/now": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
// "membership/changes": []
// "tag": membership
Captured log [first][2020-01-23 1:16:41.2170] [ClusterShellState.swift:502][/system/cluster] [info] NO CONVERGENCE no leader actions, Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
Captured log [first][2020-01-23 1:16:42.3110] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://second@localhost:9002/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/peerCount": 2
// "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip, sact://second:490321953@localhost:9002/system/cluster/gossip]
// "gossip/target": sact://second@localhost:9002/system/cluster/gossip
Captured log [first][2020-01-23 1:16:42.3110] [ConvergentGossip.swift:142][/system/cluster/gossip] [trace] Schedule next gossip round in 1s
Captured log [first][2020-01-23 1:16:42.3140] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
Captured log [first][2020-01-23 1:16:42.3140] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://third@localhost:9003: 6, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://second@localhost:9002: 5])
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
Captured log [first][2020-01-23 1:16:42.3150] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.same] to incoming gossip; Merge resulted in 0 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
// "gossip/incoming": Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "gossip/now": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
// "membership/changes": []
// "tag": membership
Captured log [first][2020-01-23 1:16:42.3150] [ClusterShellState.swift:502][/system/cluster] [info] NO CONVERGENCE no leader actions, Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
Captured log [first][2020-01-23 1:16:43.4090] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/peerCount": 2
// "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip, sact://second:490321953@localhost:9002/system/cluster/gossip]
// "gossip/target": sact://third@localhost:9003/system/cluster/gossip
Captured log [first][2020-01-23 1:16:43.4090] [ConvergentGossip.swift:142][/system/cluster/gossip] [trace] Schedule next gossip round in 1s
Captured log [first][2020-01-23 1:16:43.4120] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
Captured log [first][2020-01-23 1:16:43.4130] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://third@localhost:9003: 6, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://second@localhost:9002: 5])
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
Captured log [first][2020-01-23 1:16:43.4140] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.same] to incoming gossip; Merge resulted in 0 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
// "gossip/incoming": Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable)]))
// "gossip/now": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
// "membership/changes": []
// "tag": membership
Captured log [first][2020-01-23 1:16:43.4140] [ClusterShellState.swift:502][/system/cluster] [info] NO CONVERGENCE no leader actions, Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
Captured log [first][2020-01-23 1:16:43.4970] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://third@localhost:9003: 6, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://second@localhost:9002: 5])
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
Captured log [first][2020-01-23 1:16:43.4970] [ClusterShell.swift:1000][/system/cluster] [info] Cluster membership change: [sact://second@localhost:9002 :: [     up] -> [   down]], membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])
Captured log [first][2020-01-23 1:16:43.4970] [ClusterEventStream.swift:60][/system/clusterEvents] [trace] Published event membershipChange(sact://second@localhost:9002 :: [     up] -> [   down]) to 4 subscribers
// metadata:
// "eventStream/subscribers": ["/system/replicator/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/leadership", "/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y"]
Captured log [first][2020-01-23 1:16:43.4980] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://third@localhost:9003: 6, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://second@localhost:9002: 5])
NOW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
NEW: Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
Captured log [first][2020-01-23 1:16:43.4980] [ClusterShell.swift:138][/system/cluster] [trace] Finish association with sact://second@localhost:9002, yet node not in membership already?
Captured log [first][2020-01-23 1:16:43.4980] [ConvergentGossip.swift:63][/system/cluster/gossip] [trace] Peer terminated: sact://second@localhost:9002/system/cluster/gossip, will not gossip to it anymore
Captured log [first][2020-01-23 1:16:44.5090] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/peerCount": 1
// "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip]
// "gossip/target": sact://third@localhost:9003/system/cluster/gossip
Captured log [first][2020-01-23 1:16:44.5090] [ConvergentGossip.swift:142][/system/cluster/gossip] [trace] Schedule next gossip round in 1s
Captured log [first][2020-01-23 1:16:45.6040] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/peerCount": 1
// "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip]
// "gossip/target": sact://third@localhost:9003/system/cluster/gossip
Captured log [first][2020-01-23 1:16:45.6050] [ConvergentGossip.swift:142][/system/cluster/gossip] [trace] Schedule next gossip round in 1s
Captured log [first][2020-01-23 1:16:46.7020] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/peerCount": 1
// "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip]
// "gossip/target": sact://third@localhost:9003/system/cluster/gossip
Captured log [first][2020-01-23 1:16:46.7020] [ConvergentGossip.swift:142][/system/cluster/gossip] [trace] Schedule next gossip round in 1s
Captured log [first][2020-01-23 1:16:47.7450] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/peerCount": 1
// "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip]
// "gossip/target": sact://third@localhost:9003/system/cluster/gossip
Captured log [first][2020-01-23 1:16:47.7450] [ConvergentGossip.swift:142][/system/cluster/gossip] [trace] Schedule next gossip round in 1s
Captured log [first][2020-01-23 1:16:48.8010] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/peerCount": 1
// "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip]
// "gossip/target": sact://third@localhost:9003/system/cluster/gossip
Captured log [first][2020-01-23 1:16:48.8010] [ConvergentGossip.swift:142][/system/cluster/gossip] [trace] Schedule next gossip round in 1s
Captured log [first][2020-01-23 1:16:49.8960] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/peerCount": 1
// "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip]
// "gossip/target": sact://third@localhost:9003/system/cluster/gossip
Captured log [first][2020-01-23 1:16:49.8960] [ConvergentGossip.swift:142][/system/cluster/gossip] [trace] Schedule next gossip round in 1s
Captured log [first][2020-01-23 1:16:50.9020] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/peerCount": 1
// "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip]
// "gossip/target": sact://third@localhost:9003/system/cluster/gossip
Captured log [first][2020-01-23 1:16:50.9020] [ConvergentGossip.swift:142][/system/cluster/gossip] [trace] Schedule next gossip round in 1s
Captured log [first][2020-01-23 1:16:52.0010] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/peerCount": 1
// "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip]
// "gossip/target": sact://third@localhost:9003/system/cluster/gossip
Captured log [first][2020-01-23 1:16:52.0010] [ConvergentGossip.swift:142][/system/cluster/gossip] [trace] Schedule next gossip round in 1s
Captured log [first][2020-01-23 1:16:53.1020] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/peerCount": 1
// "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip]
// "gossip/target": sact://third@localhost:9003/system/cluster/gossip
Captured log [first][2020-01-23 1:16:53.1020] [ConvergentGossip.swift:142][/system/cluster/gossip] [trace] Schedule next gossip round in 1s
Captured log [first][2020-01-23 1:16:54.2020] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/peerCount": 1
// "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip]
// "gossip/target": sact://third@localhost:9003/system/cluster/gossip
Captured log [first][2020-01-23 1:16:54.2030] [ConvergentGossip.swift:142][/system/cluster/gossip] [trace] Schedule next gossip round in 1s
Captured log [first][2020-01-23 1:16:55.3010] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/peerCount": 1
// "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip]
// "gossip/target": sact://third@localhost:9003/system/cluster/gossip
Captured log [first][2020-01-23 1:16:55.3010] [ConvergentGossip.swift:142][/system/cluster/gossip] [trace] Schedule next gossip round in 1s
Captured log [first][2020-01-23 1:16:56.3990] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/peerCount": 1
// "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip]
// "gossip/target": sact://third@localhost:9003/system/cluster/gossip
Captured log [first][2020-01-23 1:16:56.4000] [ConvergentGossip.swift:142][/system/cluster/gossip] [trace] Schedule next gossip round in 1s
Captured log [first][2020-01-23 1:16:57.4740] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/peerCount": 1
// "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip]
// "gossip/target": sact://third@localhost:9003/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958720]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958724]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/gossip
Captured log [first][2020-01-23 1:16:57.4740] [ConvergentGossip.swift:142][/system/cluster/gossip] [trace] Schedule next gossip round in 1s
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958773]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/user/$ask-9
Captured log [first][2020-01-23 1:16:58.5340] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/peerCount": 1
// "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip]
// "gossip/target": sact://third@localhost:9003/system/cluster/gossip
Captured log [first][2020-01-23 1:16:58.5340] [ConvergentGossip.swift:142][/system/cluster/gossip] [trace] Schedule next gossip round in 1s
Captured log [first][2020-01-23 1:16:59.6320] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/peerCount": 1
// "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip]
// "gossip/target": sact://third@localhost:9003/system/cluster/gossip
Captured log [first][2020-01-23 1:16:59.6320] [ConvergentGossip.swift:142][/system/cluster/gossip] [trace] Schedule next gossip round in 1s
Captured log [first][2020-01-23 1:17:00.7230] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/peerCount": 1
// "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip]
// "gossip/target": sact://third@localhost:9003/system/cluster/gossip
Captured log [first][2020-01-23 1:17:00.7230] [ConvergentGossip.swift:142][/system/cluster/gossip] [trace] Schedule next gossip round in 1s
Captured log [first][2020-01-23 1:17:01.7260] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/peerCount": 1
// "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip]
// "gossip/target": sact://third@localhost:9003/system/cluster/gossip
Captured log [first][2020-01-23 1:17:01.7260] [ConvergentGossip.swift:142][/system/cluster/gossip] [trace] Schedule next gossip round in 1s
Captured log [first][2020-01-23 1:17:02.7280] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/peerCount": 1
// "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip]
// "gossip/target": sact://third@localhost:9003/system/cluster/gossip
Captured log [first][2020-01-23 1:17:02.7280] [ConvergentGossip.swift:142][/system/cluster/gossip] [trace] Schedule next gossip round in 1s
Captured log [first][2020-01-23 1:17:03.8270] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/peerCount": 1
// "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip]
// "gossip/target": sact://third@localhost:9003/system/cluster/gossip
Captured log [first][2020-01-23 1:17:03.8270] [ConvergentGossip.swift:142][/system/cluster/gossip] [trace] Schedule next gossip round in 1s
========================================================================================================================
------------------------------------- ActorSystem(second, sact://second@localhost:9002) ------------------------------------------------
Captured log [second][2020-01-23 1:16:36.9150] [ActorShell+Children.swift:345][/system/cluster] [debug] Spawning [DistributedActors.Behavior<DistributedActors.SWIM.Message>.setup((Function))], on path: [/system/cluster/swim]
Captured log [second][2020-01-23 1:16:36.9160] [ClusterEventStream.swift:43][/system/clusterEvents] [trace] Successfully subscribed [ActorRef<Cluster.Event>(/system/replicator/$sub-DistributedActors.Cluster.Event-y)], offering membership snapshot
Captured log [second][2020-01-23 1:16:36.9160] [ClusterEventStream.swift:43][/system/clusterEvents] [trace] Successfully subscribed [ActorRef<Cluster.Event>(/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y)], offering membership snapshot
Captured log [second][2020-01-23 1:16:36.9160] [ActorShell+Children.swift:345][/system/cluster] [debug] Spawning [DistributedActors.Behavior<DistributedActors.Cluster.Event>.setup((Function))], on path: [/system/cluster/leadership]
Captured log [second][2020-01-23 1:16:36.9170] [Leadership.swift:136][/system/cluster/leadership] [trace] Spawned /system/cluster/leadership to run LowestReachableMember(minimumNumberOfMembersToDecide: 2, loseLeadershipIfBelowMinNrOfMembers: false)
Captured log [second][2020-01-23 1:16:36.9170] [ActorShell+Children.swift:345][/system/cluster] [debug] Spawning [DistributedActors.Behavior<DistributedActors.DowningStrategyMessage>.setup((Function))], on path: [/system/cluster/downingStrategy]
Captured log [second][2020-01-23 1:16:36.9170] [ClusterShell.swift:355][/system/cluster] [info] Binding to: [sact://second@localhost:9002]
Captured log [second][2020-01-23 1:16:36.9170] [ClusterEventStream.swift:43][/system/clusterEvents] [trace] Successfully subscribed [ActorRef<Cluster.Event>(/system/cluster/leadership)], offering membership snapshot
Captured log [second][2020-01-23 1:16:36.9170] [ClusterEventStream.swift:43][/system/clusterEvents] [trace] Successfully subscribed [ActorRef<Cluster.Event>(/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y)], offering membership snapshot
Captured log [second][2020-01-23 1:16:36.9180] [Leadership.swift:264][/system/cluster/leadership] [info] Not enough members [1/2] to run election, members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)]
Captured log [second][2020-01-23 1:16:36.9180] [DowningStrategy.swift:76][/system/cluster/downingStrategy] [trace] Downing strategy reaction to snapshot(Membership(count: 0, leader: [.none], members: [])) resulted in: none
// metadata:
// "downing/strategy": TimeoutBasedDowningStrategy
// "tag": downing
Captured log [second][2020-01-23 1:16:36.9220] [ClusterShell.swift:366][/system/cluster] [info] Bound to [IPv4]127.0.0.1/127.0.0.1:9002
Captured log [second][2020-01-23 1:16:36.9230] [ActorShell+Children.swift:345][/system/cluster] [debug] Spawning [DistributedActors.Behavior<DistributedActors.ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>.setup((Function))], on path: [/system/cluster/gossip]
Captured log [second][2020-01-23 1:16:36.9230] [ConvergentGossip.swift:142][/system/cluster/gossip] [trace] Schedule next gossip round in 1s
Captured log [second][2020-01-23 1:16:36.9240] [ClusterShellState.swift:93][/system/cluster] [info] ACK  VERSION >>> [:] >>>> [uniqueNode:sact://second@localhost:9002: 1]
NOW: Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://second@localhost:9002 observed versions:
), membership: Membership(count: 0, leader: [.none], members: []))
NEW: Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://second@localhost:9002 @ 1
), membership: Membership(count: 1, leader: [.none], members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)]))
RES: Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://second@localhost:9002 @ 1
), membership: Membership(count: 1, leader: [.none], members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)]))
Captured log [second][2020-01-23 1:16:36.9240] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.happenedBefore] to incoming gossip; Merge resulted in 1 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://second@localhost:9002 observed versions:
// ), membership: Membership(count: 0, leader: [.none], members: []))
// "gossip/incoming": Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://second@localhost:9002 @ 1
// ), membership: Membership(count: 1, leader: [.none], members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)]))
// "gossip/now": Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://second@localhost:9002 @ 1
// ), membership: Membership(count: 1, leader: [.none], members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)]))
// "membership/changes": ["Cluster.MembershipChange(node: sact://second@localhost:9002, replaced: [nil], fromStatus: joining, toStatus: joining)"]
// "tag": membership
Captured log [second][2020-01-23 1:16:36.9250] [Leadership.swift:264][/system/cluster/leadership] [info] Not enough members [1/2] to run election, members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)]
Captured log [second][2020-01-23 1:16:36.9250] [DowningStrategy.swift:76][/system/cluster/downingStrategy] [trace] Downing strategy reaction to membershipChange(sact://second@localhost:9002 :: [joining] -> [joining]) resulted in: none
// metadata:
// "downing/strategy": TimeoutBasedDowningStrategy
// "tag": downing
Captured log [second][2020-01-23 1:16:36.9250] [ClusterEventStream.swift:60][/system/clusterEvents] [trace] Published event membershipChange(sact://second@localhost:9002 :: [joining] -> [joining]) to 4 subscribers
// metadata:
// "eventStream/subscribers": ["/system/cluster/leadership", "/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y", "/system/replicator/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y"]
Captured log [second][2020-01-23 1:16:36.9300] [ClusterShell.swift:670][/system/cluster] [info] Accept association with [sact://first:2644199270@localhost:9001]!
Captured log [second][2020-01-23 1:16:36.9310] [ClusterShellState.swift:85][/system/cluster] [info] BUMP VERSION >>> [uniqueNode:sact://second@localhost:9002: 1] >>>> [uniqueNode:sact://second@localhost:9002: 2]
NOW: Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://second@localhost:9002 @ 1
), membership: Membership(count: 1, leader: [.none], members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)]))
NEW: Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://second@localhost:9002 @ 1
), membership: Membership(count: 2, leader: [.none], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)]))
RES: Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://second@localhost:9002 @ 2
), membership: Membership(count: 2, leader: [.none], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)]))
Captured log [second][2020-01-23 1:16:36.9310] [ClusterEventStream.swift:60][/system/clusterEvents] [trace] Published event membershipChange(sact://first@localhost:9001 :: [unknown] -> [joining]) to 4 subscribers
// metadata:
// "eventStream/subscribers": ["/system/cluster/leadership", "/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y", "/system/replicator/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y"]
Captured log [second][2020-01-23 1:16:36.9310] [DowningStrategy.swift:76][/system/cluster/downingStrategy] [trace] Downing strategy reaction to membershipChange(sact://first@localhost:9001 :: [unknown] -> [joining]) resulted in: none
// metadata:
// "downing/strategy": TimeoutBasedDowningStrategy
// "tag": downing
Captured log [second][2020-01-23 1:16:36.9310] [Leadership.swift:321][/system/cluster/leadership] [debug] Selected new leader: [[nil] -> [Member(sact://first@localhost:9001, status: joining, reachability: reachable)]]
// metadata:
// "membership": Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)])
Captured log [second][2020-01-23 1:16:36.9320] [ConvergentGossip.swift:75][/system/cluster/gossip] [trace] Got introduced to peer [ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://first@localhost:9001/system/cluster/gossip)], pushing initial gossip immediately
// metadata:
// "gossip/peerCount": 1
// "gossip/peers": [sact://first:2644199270@localhost:9001/system/cluster/gossip]
Captured log [second][2020-01-23 1:16:36.9320] [ClusterShellState.swift:85][/system/cluster] [info] BUMP VERSION >>> [uniqueNode:sact://second@localhost:9002: 2] >>>> [uniqueNode:sact://second@localhost:9002: 3]
NOW: Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://second@localhost:9002 @ 2
), membership: Membership(count: 2, leader: [.none], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)]))
NEW: Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://second@localhost:9002 @ 2
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)]))
RES: Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://second@localhost:9002 @ 3
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)]))
Captured log [second][2020-01-23 1:16:36.9320] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://first@localhost:9001/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://second@localhost:9002 @ 2
// ), membership: Membership(count: 2, leader: [.none], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)])))
// "gossip/peerCount": 1
// "gossip/peers": [sact://first:2644199270@localhost:9001/system/cluster/gossip]
// "gossip/target": sact://first@localhost:9001/system/cluster/gossip
Captured log [second][2020-01-23 1:16:36.9320] [ClusterShellState.swift:445][/system/cluster] [info] Leader change: LeadershipChange(oldLeader: nil, newLeader: Optional(Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)))
// metadata:
// "membership/count": 2
Captured log [second][2020-01-23 1:16:36.9320] [ClusterShellState.swift:483][/system/cluster] [trace] Membership updated Membership sact://second@localhost:9002:
  LEADER: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)]
  [sact://first:2644199270@localhost:9001] STATUS: [joining]
  [sact://second:490321953@localhost:9002] STATUS: [joining],
  by leadershipChange(DistributedActors.Cluster.LeadershipChange(oldLeader: nil, newLeader: Optional(Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable))))
Captured log [second][2020-01-23 1:16:36.9330] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://second@localhost:9002: 4])
NOW: Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://second@localhost:9002 @ 3
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)]))
NEW: Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://second@localhost:9002 @ 4
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)]))
Captured log [second][2020-01-23 1:16:36.9330] [ClusterEventStream.swift:60][/system/clusterEvents] [trace] Published event leadershipChange(DistributedActors.Cluster.LeadershipChange(oldLeader: nil, newLeader: Optional(Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)))) to 4 subscribers
// metadata:
// "eventStream/subscribers": ["/system/cluster/leadership", "/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y", "/system/replicator/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y"]
Captured log [second][2020-01-23 1:16:36.9330] [DowningStrategy.swift:76][/system/cluster/downingStrategy] [trace] Downing strategy reaction to leadershipChange(DistributedActors.Cluster.LeadershipChange(oldLeader: nil, newLeader: Optional(Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)))) resulted in: none
// metadata:
// "downing/strategy": TimeoutBasedDowningStrategy
// "tag": downing
Captured log [second][2020-01-23 1:16:36.9370] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
), membership: Membership(count: 2, leader: [.none], members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 2
// ), membership: Membership(count: 2, leader: [.none], members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://second@localhost:9002 @ 4
// ), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)])))
Captured log [second][2020-01-23 1:16:36.9380] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://first@localhost:9001: 2, uniqueNode:sact://second@localhost:9002: 4])
NOW: Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://second@localhost:9002 @ 4
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)]))
NEW: Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
        uniqueNode:sact://second@localhost:9002 @ 4
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)]))
Captured log [second][2020-01-23 1:16:36.9380] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.concurrent] to incoming gossip; Merge resulted in 0 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://second@localhost:9002 @ 4
// ), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)]))
// "gossip/incoming": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 2
// ), membership: Membership(count: 2, leader: [.none], members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable)]))
// "gossip/now": Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 2
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 2
//         uniqueNode:sact://second@localhost:9002 @ 4
// ), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)]))
// "membership/changes": []
// "tag": membership
Captured log [second][2020-01-23 1:16:36.9390] [ClusterShell.swift:579][/system/cluster] [debug] Attempted associating with already associated node: [sact://first@localhost:9001], existing association: [associated(AssociatedState(channel: SocketChannel { BaseSocket { fd=47 }, active = true, localAddress = Optional([IPv4]127.0.0.1/127.0.0.1:9002), remoteAddress = Optional([IPv4]127.0.0.1/127.0.0.1:57071) }, selfNode: sact://second@localhost:9002, remoteNode: sact://first@localhost:9001))]
Captured log [second][2020-01-23 1:16:38.0170] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://first@localhost:9001/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 2
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 2
//         uniqueNode:sact://second@localhost:9002 @ 4
// ), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)])))
// "gossip/peerCount": 1
// "gossip/peers": [sact://first:2644199270@localhost:9001/system/cluster/gossip]
// "gossip/target": sact://first@localhost:9001/system/cluster/gossip
Captured log [second][2020-01-23 1:16:38.0170] [ConvergentGossip.swift:142][/system/cluster/gossip] [trace] Schedule next gossip round in 1s
Captured log [second][2020-01-23 1:16:38.0190] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://second@localhost:9002 @ 2
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 2
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://second@localhost:9002 @ 2
// ), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 2
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 2
//         uniqueNode:sact://second@localhost:9002 @ 4
// ), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)])))
Captured log [second][2020-01-23 1:16:38.0190] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://first@localhost:9001: 4, uniqueNode:sact://second@localhost:9002: 4])
NOW: Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
        uniqueNode:sact://second@localhost:9002 @ 4
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)]))
NEW: Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 4
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable)]))
Captured log [second][2020-01-23 1:16:38.0200] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.concurrent] to incoming gossip; Merge resulted in 2 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 2
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 2
//         uniqueNode:sact://second@localhost:9002 @ 4
// ), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: joining, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)]))
// "gossip/incoming": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 2
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://second@localhost:9002 @ 2
// ), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1)]))
// "gossip/now": Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 2
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 4
// ), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable)]))
// "membership/changes": ["Cluster.MembershipChange(node: sact://first@localhost:9001, replaced: [nil], fromStatus: joining, toStatus: up)", "Cluster.MembershipChange(node: sact://second@localhost:9002, replaced: [nil], fromStatus: joining, toStatus: up)"]
// "tag": membership
Captured log [second][2020-01-23 1:16:38.0200] [ClusterEventStream.swift:60][/system/clusterEvents] [trace] Published event membershipChange(sact://first@localhost:9001 :: [joining] -> [     up]) to 4 subscribers
// metadata:
// "eventStream/subscribers": ["/system/cluster/leadership", "/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y", "/system/replicator/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y"]
Captured log [second][2020-01-23 1:16:38.0200] [DowningStrategy.swift:76][/system/cluster/downingStrategy] [trace] Downing strategy reaction to membershipChange(sact://first@localhost:9001 :: [joining] -> [     up]) resulted in: none
// metadata:
// "downing/strategy": TimeoutBasedDowningStrategy
// "tag": downing
Captured log [second][2020-01-23 1:16:38.0200] [ClusterEventStream.swift:60][/system/clusterEvents] [trace] Published event membershipChange(sact://second@localhost:9002 :: [joining] -> [     up]) to 4 subscribers
// metadata:
// "eventStream/subscribers": ["/system/cluster/leadership", "/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y", "/system/replicator/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y"]
Captured log [second][2020-01-23 1:16:38.0200] [DowningStrategy.swift:76][/system/cluster/downingStrategy] [trace] Downing strategy reaction to membershipChange(sact://second@localhost:9002 :: [joining] -> [     up]) resulted in: none
// metadata:
// "downing/strategy": TimeoutBasedDowningStrategy
// "tag": downing
Captured log [second][2020-01-23 1:16:38.0740] [ClusterShell.swift:670][/system/cluster] [info] Accept association with [sact://third:448661589@localhost:9003]!
Captured log [second][2020-01-23 1:16:38.0750] [ClusterShellState.swift:85][/system/cluster] [info] BUMP VERSION >>> [uniqueNode:sact://first@localhost:9001: 4, uniqueNode:sact://second@localhost:9002: 4] >>>> [uniqueNode:sact://first@localhost:9001: 4, uniqueNode:sact://second@localhost:9002: 5]
NOW: Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 4
), membership: Membership(count: 2, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable)]))
NEW: Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 4
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)]))
RES: Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)]))
Captured log [second][2020-01-23 1:16:38.0750] [ClusterEventStream.swift:60][/system/clusterEvents] [trace] Published event membershipChange(sact://third@localhost:9003 :: [unknown] -> [joining]) to 4 subscribers
// metadata:
// "eventStream/subscribers": ["/system/cluster/leadership", "/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y", "/system/replicator/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y"]
Captured log [second][2020-01-23 1:16:38.0750] [DowningStrategy.swift:76][/system/cluster/downingStrategy] [trace] Downing strategy reaction to membershipChange(sact://third@localhost:9003 :: [unknown] -> [joining]) resulted in: none
// metadata:
// "downing/strategy": TimeoutBasedDowningStrategy
// "tag": downing
Captured log [second][2020-01-23 1:16:38.0760] [ConvergentGossip.swift:75][/system/cluster/gossip] [trace] Got introduced to peer [ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip)], pushing initial gossip immediately
// metadata:
// "gossip/peerCount": 2
// "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip, sact://first:2644199270@localhost:9001/system/cluster/gossip]
Captured log [second][2020-01-23 1:16:38.0760] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://third@localhost:9003/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 2
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)])))
// "gossip/peerCount": 2
// "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip, sact://first:2644199270@localhost:9001/system/cluster/gossip]
// "gossip/target": sact://third@localhost:9003/system/cluster/gossip
Captured log [second][2020-01-23 1:16:38.0790] [ClusterShell.swift:579][/system/cluster] [debug] Attempted associating with already associated node: [sact://third@localhost:9003], existing association: [associated(AssociatedState(channel: SocketChannel { BaseSocket { fd=49 }, active = true, localAddress = Optional([IPv4]127.0.0.1/127.0.0.1:9002), remoteAddress = Optional([IPv4]127.0.0.1/127.0.0.1:57072) }, selfNode: sact://second@localhost:9002, remoteNode: sact://third@localhost:9003))]
Captured log [second][2020-01-23 1:16:38.0800] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://third@localhost:9003 @ 2
), membership: Membership(count: 2, leader: [.none], members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://third@localhost:9003 @ 2
// ), membership: Membership(count: 2, leader: [.none], members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 2
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)])))
Captured log [second][2020-01-23 1:16:38.0800] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://first@localhost:9001: 4, uniqueNode:sact://third@localhost:9003: 2, uniqueNode:sact://second@localhost:9002: 5])
NOW: Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)]))
NEW: Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 2
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://third@localhost:9003 @ 2
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)]))
Captured log [second][2020-01-23 1:16:38.0810] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.concurrent] to incoming gossip; Merge resulted in 0 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 2
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)]))
// "gossip/incoming": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://third@localhost:9003 @ 2
// ), membership: Membership(count: 2, leader: [.none], members: [Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)]))
// "gossip/now": Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 2
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 2
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://third@localhost:9003 @ 2
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)]))
// "membership/changes": []
// "tag": membership
Captured log [second][2020-01-23 1:16:39.0240] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://first@localhost:9001/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 2
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 2
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://third@localhost:9003 @ 2
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)])))
// "gossip/peerCount": 2
// "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip, sact://first:2644199270@localhost:9001/system/cluster/gossip]
// "gossip/target": sact://first@localhost:9001/system/cluster/gossip
Captured log [second][2020-01-23 1:16:39.0240] [ConvergentGossip.swift:142][/system/cluster/gossip] [trace] Schedule next gossip round in 1s
Captured log [second][2020-01-23 1:16:39.0270] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 2
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 2
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://third@localhost:9003 @ 2
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)])))
Captured log [second][2020-01-23 1:16:39.0280] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://third@localhost:9003: 6, uniqueNode:sact://second@localhost:9002: 5])
NOW: Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 2
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://third@localhost:9003 @ 2
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)]))
NEW: Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)]))
Captured log [second][2020-01-23 1:16:39.0290] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.happenedBefore] to incoming gossip; Merge resulted in 0 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 2
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 2
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://third@localhost:9003 @ 2
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)]))
// "gossip/incoming": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)]))
// "gossip/now": Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)]))
// "membership/changes": []
// "tag": membership
Captured log [second][2020-01-23 1:16:40.1160] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://first@localhost:9001/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)])))
// "gossip/peerCount": 2
// "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip, sact://first:2644199270@localhost:9001/system/cluster/gossip]
// "gossip/target": sact://first@localhost:9001/system/cluster/gossip
Captured log [second][2020-01-23 1:16:40.1160] [ConvergentGossip.swift:142][/system/cluster/gossip] [trace] Schedule next gossip round in 1s
Captured log [second][2020-01-23 1:16:40.1190] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 2
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 2
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)])))
Captured log [second][2020-01-23 1:16:40.1200] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://third@localhost:9003: 6, uniqueNode:sact://second@localhost:9002: 5])
NOW: Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)]))
NEW: Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)]))
Captured log [second][2020-01-23 1:16:40.1210] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.same] to incoming gossip; Merge resulted in 0 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)]))
// "gossip/incoming": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 2
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
// "gossip/now": Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)]))
// "membership/changes": []
// "tag": membership
Captured log [second][2020-01-23 1:16:41.2120] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://first@localhost:9001/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)])))
// "gossip/peerCount": 2
// "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip, sact://first:2644199270@localhost:9001/system/cluster/gossip]
// "gossip/target": sact://first@localhost:9001/system/cluster/gossip
Captured log [second][2020-01-23 1:16:41.2120] [ConvergentGossip.swift:142][/system/cluster/gossip] [trace] Schedule next gossip round in 1s
Captured log [second][2020-01-23 1:16:41.2160] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)])))
Captured log [second][2020-01-23 1:16:41.2160] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://third@localhost:9003: 6, uniqueNode:sact://second@localhost:9002: 5])
NOW: Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)]))
NEW: Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable)]))
Captured log [second][2020-01-23 1:16:41.2170] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.same] to incoming gossip; Merge resulted in 1 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)]))
// "gossip/incoming": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1)]))
// "gossip/now": Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable)]))
// "membership/changes": ["Cluster.MembershipChange(node: sact://third@localhost:9003, replaced: [nil], fromStatus: joining, toStatus: up)"]
// "tag": membership
Captured log [second][2020-01-23 1:16:41.2170] [ClusterEventStream.swift:60][/system/clusterEvents] [trace] Published event membershipChange(sact://third@localhost:9003 :: [joining] -> [     up]) to 4 subscribers
// metadata:
// "eventStream/subscribers": ["/system/cluster/leadership", "/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y", "/system/replicator/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y"]
Captured log [second][2020-01-23 1:16:41.2170] [DowningStrategy.swift:76][/system/cluster/downingStrategy] [trace] Downing strategy reaction to membershipChange(sact://third@localhost:9003 :: [joining] -> [     up]) resulted in: none
// metadata:
// "downing/strategy": TimeoutBasedDowningStrategy
// "tag": downing
Captured log [second][2020-01-23 1:16:42.3110] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://first@localhost:9001/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable)])))
// "gossip/peerCount": 2
// "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip, sact://first:2644199270@localhost:9001/system/cluster/gossip]
// "gossip/target": sact://first@localhost:9001/system/cluster/gossip
Captured log [second][2020-01-23 1:16:42.3110] [ConvergentGossip.swift:142][/system/cluster/gossip] [trace] Schedule next gossip round in 1s
Captured log [second][2020-01-23 1:16:42.3140] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable)])))
Captured log [second][2020-01-23 1:16:42.3140] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://third@localhost:9003: 6, uniqueNode:sact://second@localhost:9002: 5])
NOW: Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable)]))
NEW: Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable)]))
Captured log [second][2020-01-23 1:16:42.3150] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.same] to incoming gossip; Merge resulted in 0 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable)]))
// "gossip/incoming": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1)]))
// "gossip/now": Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable)]))
// "membership/changes": []
// "tag": membership
Captured log [second][2020-01-23 1:16:43.4090] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://first@localhost:9001/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable)])))
// "gossip/peerCount": 2
// "gossip/peers": [sact://third:448661589@localhost:9003/system/cluster/gossip, sact://first:2644199270@localhost:9001/system/cluster/gossip]
// "gossip/target": sact://first@localhost:9001/system/cluster/gossip
Captured log [second][2020-01-23 1:16:43.4090] [ConvergentGossip.swift:142][/system/cluster/gossip] [trace] Schedule next gossip round in 1s
Captured log [second][2020-01-23 1:16:43.4990] [ClusterShell.swift:896][/system/cluster] [warning] Received .restInPeace from sact://first@localhost:9001, meaning this node is known to be .down or worse, and should terminate. Initiating self .down-ing.
// metadata:
// "sender/node": sact://first:2644199270@localhost:9001
Captured log [second][2020-01-23 1:16:43.5000] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://third@localhost:9003: 6, uniqueNode:sact://second@localhost:9002: 5])
NOW: Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable)]))
NEW: Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable)]))
Captured log [second][2020-01-23 1:16:43.5000] [ClusterShell.swift:1000][/system/cluster] [info] Cluster membership change: [sact://second@localhost:9002 :: [     up] -> [   down]], membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable)])
Captured log [second][2020-01-23 1:16:43.5000] [ClusterShell.swift:1007][/system/cluster] [warning] Self node was marked [.down]!
// metadata:
// "cluster/membership": Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable)])
Captured log [second][2020-01-23 1:16:43.5000] [ClusterEventStream.swift:60][/system/clusterEvents] [trace] Published event membershipChange(sact://second@localhost:9002 :: [     up] -> [   down]) to 4 subscribers
// metadata:
// "eventStream/subscribers": ["/system/cluster/leadership", "/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y", "/system/replicator/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y"]
Captured log [second][2020-01-23 1:16:43.5000] [ClusterReceptionist.swift:298][/user/leaver] [warning] This node was marked as [.down], delay is immediate. Shutting down the system immediately!
========================================================================================================================
------------------------------------- ActorSystem(third, sact://third@localhost:9003) ------------------------------------------------
Captured log [third][2020-01-23 1:16:36.9170] [ActorShell+Children.swift:345][/system/cluster] [debug] Spawning [DistributedActors.Behavior<DistributedActors.SWIM.Message>.setup((Function))], on path: [/system/cluster/swim]
Captured log [third][2020-01-23 1:16:36.9170] [ClusterEventStream.swift:43][/system/clusterEvents] [trace] Successfully subscribed [ActorRef<Cluster.Event>(/system/replicator/$sub-DistributedActors.Cluster.Event-y)], offering membership snapshot
Captured log [third][2020-01-23 1:16:36.9170] [ActorShell+Children.swift:345][/system/cluster] [debug] Spawning [DistributedActors.Behavior<DistributedActors.Cluster.Event>.setup((Function))], on path: [/system/cluster/leadership]
Captured log [third][2020-01-23 1:16:36.9170] [ClusterEventStream.swift:43][/system/clusterEvents] [trace] Successfully subscribed [ActorRef<Cluster.Event>(/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y)], offering membership snapshot
Captured log [third][2020-01-23 1:16:36.9170] [Leadership.swift:136][/system/cluster/leadership] [trace] Spawned /system/cluster/leadership to run LowestReachableMember(minimumNumberOfMembersToDecide: 2, loseLeadershipIfBelowMinNrOfMembers: false)
Captured log [third][2020-01-23 1:16:36.9170] [ActorShell+Children.swift:345][/system/cluster] [debug] Spawning [DistributedActors.Behavior<DistributedActors.DowningStrategyMessage>.setup((Function))], on path: [/system/cluster/downingStrategy]
Captured log [third][2020-01-23 1:16:36.9170] [ClusterShell.swift:355][/system/cluster] [info] Binding to: [sact://third@localhost:9003]
Captured log [third][2020-01-23 1:16:36.9180] [ClusterEventStream.swift:43][/system/clusterEvents] [trace] Successfully subscribed [ActorRef<Cluster.Event>(/system/cluster/leadership)], offering membership snapshot
Captured log [third][2020-01-23 1:16:36.9180] [ClusterEventStream.swift:43][/system/clusterEvents] [trace] Successfully subscribed [ActorRef<Cluster.Event>(/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y)], offering membership snapshot
Captured log [third][2020-01-23 1:16:36.9180] [Leadership.swift:264][/system/cluster/leadership] [info] Not enough members [1/2] to run election, members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)]
Captured log [third][2020-01-23 1:16:36.9180] [DowningStrategy.swift:76][/system/cluster/downingStrategy] [trace] Downing strategy reaction to snapshot(Membership(count: 0, leader: [.none], members: [])) resulted in: none
// metadata:
// "downing/strategy": TimeoutBasedDowningStrategy
// "tag": downing
Captured log [third][2020-01-23 1:16:36.9220] [ClusterShell.swift:366][/system/cluster] [info] Bound to [IPv4]127.0.0.1/127.0.0.1:9003
Captured log [third][2020-01-23 1:16:36.9230] [ActorShell+Children.swift:345][/system/cluster] [debug] Spawning [DistributedActors.Behavior<DistributedActors.ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>.setup((Function))], on path: [/system/cluster/gossip]
Captured log [third][2020-01-23 1:16:36.9230] [ConvergentGossip.swift:142][/system/cluster/gossip] [trace] Schedule next gossip round in 1s
Captured log [third][2020-01-23 1:16:36.9240] [ClusterShellState.swift:93][/system/cluster] [info] ACK  VERSION >>> [:] >>>> [uniqueNode:sact://third@localhost:9003: 1]
NOW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://third@localhost:9003 observed versions:
), membership: Membership(count: 0, leader: [.none], members: []))
NEW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://third@localhost:9003 @ 1
), membership: Membership(count: 1, leader: [.none], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)]))
RES: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://third@localhost:9003 @ 1
), membership: Membership(count: 1, leader: [.none], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)]))
Captured log [third][2020-01-23 1:16:36.9250] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.happenedBefore] to incoming gossip; Merge resulted in 1 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://third@localhost:9003 observed versions:
// ), membership: Membership(count: 0, leader: [.none], members: []))
// "gossip/incoming": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://third@localhost:9003 @ 1
// ), membership: Membership(count: 1, leader: [.none], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)]))
// "gossip/now": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://third@localhost:9003 @ 1
// ), membership: Membership(count: 1, leader: [.none], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)]))
// "membership/changes": ["Cluster.MembershipChange(node: sact://third@localhost:9003, replaced: [nil], fromStatus: joining, toStatus: joining)"]
// "tag": membership
Captured log [third][2020-01-23 1:16:36.9250] [Leadership.swift:264][/system/cluster/leadership] [info] Not enough members [1/2] to run election, members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)]
Captured log [third][2020-01-23 1:16:36.9250] [DowningStrategy.swift:76][/system/cluster/downingStrategy] [trace] Downing strategy reaction to membershipChange(sact://third@localhost:9003 :: [joining] -> [joining]) resulted in: none
// metadata:
// "downing/strategy": TimeoutBasedDowningStrategy
// "tag": downing
Captured log [third][2020-01-23 1:16:36.9250] [ClusterEventStream.swift:60][/system/clusterEvents] [trace] Published event membershipChange(sact://third@localhost:9003 :: [joining] -> [joining]) to 4 subscribers
// metadata:
// "eventStream/subscribers": ["/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y", "/system/replicator/$sub-DistributedActors.Cluster.Event-y", "/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/leadership"]
Captured log [third][2020-01-23 1:16:38.0690] [ClusterShell.swift:627][/system/cluster] [info] Extending handshake offer to sact://second@localhost:9002)
Captured log [third][2020-01-23 1:16:38.0760] [ClusterShellState.swift:85][/system/cluster] [info] BUMP VERSION >>> [uniqueNode:sact://third@localhost:9003: 1] >>>> [uniqueNode:sact://third@localhost:9003: 2]
NOW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://third@localhost:9003 @ 1
), membership: Membership(count: 1, leader: [.none], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)]))
NEW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://third@localhost:9003 @ 1
), membership: Membership(count: 2, leader: [.none], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)]))
RES: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://third@localhost:9003 @ 2
), membership: Membership(count: 2, leader: [.none], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)]))
Captured log [third][2020-01-23 1:16:38.0760] [ClusterShell.swift:824][/system/cluster] [debug] Associated with: [sact://second:490321953@localhost:9002]; Membership change: Cluster.MembershipChange(node: sact://second@localhost:9002, replaced: [nil], fromStatus: nil, toStatus: joining), resulting in: Membership(count: 2, leader: [.none], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)])
Captured log [third][2020-01-23 1:16:38.0760] [DowningStrategy.swift:76][/system/cluster/downingStrategy] [trace] Downing strategy reaction to membershipChange(sact://second@localhost:9002 :: [unknown] -> [joining]) resulted in: none
// metadata:
// "downing/strategy": TimeoutBasedDowningStrategy
// "tag": downing
Captured log [third][2020-01-23 1:16:38.0760] [ClusterEventStream.swift:60][/system/clusterEvents] [trace] Published event membershipChange(sact://second@localhost:9002 :: [unknown] -> [joining]) to 4 subscribers
// metadata:
// "eventStream/subscribers": ["/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y", "/system/replicator/$sub-DistributedActors.Cluster.Event-y", "/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/leadership"]
Captured log [third][2020-01-23 1:16:38.0760] [Leadership.swift:321][/system/cluster/leadership] [debug] Selected new leader: [[nil] -> [Member(sact://second@localhost:9002, status: joining, reachability: reachable)]]
// metadata:
// "membership": Membership(count: 2, leader: [Member(sact://second@localhost:9002, status: joining, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)])
Captured log [third][2020-01-23 1:16:38.0760] [ClusterShell.swift:959][/system/cluster] [debug] Associated sact://second@localhost:9002, informing SWIM to monitor this node.
Captured log [third][2020-01-23 1:16:38.0770] [ConvergentGossip.swift:75][/system/cluster/gossip] [trace] Got introduced to peer [ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://second@localhost:9002/system/cluster/gossip)], pushing initial gossip immediately
// metadata:
// "gossip/peerCount": 1
// "gossip/peers": [sact://second:490321953@localhost:9002/system/cluster/gossip]
Captured log [third][2020-01-23 1:16:38.0770] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://second@localhost:9002/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://third@localhost:9003 @ 2
// ), membership: Membership(count: 2, leader: [.none], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)])))
// "gossip/peerCount": 1
// "gossip/peers": [sact://second:490321953@localhost:9002/system/cluster/gossip]
// "gossip/target": sact://second@localhost:9002/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958725]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958723]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/gossip
Captured log [third][2020-01-23 1:16:38.0770] [ClusterShellState.swift:85][/system/cluster] [info] BUMP VERSION >>> [uniqueNode:sact://third@localhost:9003: 2] >>>> [uniqueNode:sact://third@localhost:9003: 3]
NOW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://third@localhost:9003 @ 2
), membership: Membership(count: 2, leader: [.none], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)]))
NEW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://third@localhost:9003 @ 2
), membership: Membership(count: 2, leader: [Member(sact://second@localhost:9002, status: joining, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)]))
RES: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://third@localhost:9003 @ 3
), membership: Membership(count: 2, leader: [Member(sact://second@localhost:9002, status: joining, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)]))
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958763]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/user/$ask-yb
Captured log [third][2020-01-23 1:16:38.0770] [ClusterShellState.swift:445][/system/cluster] [info] Leader change: LeadershipChange(oldLeader: nil, newLeader: Optional(Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)))
// metadata:
// "membership/count": 2
Captured log [third][2020-01-23 1:16:38.0770] [ClusterShellState.swift:483][/system/cluster] [trace] Membership updated Membership sact://third@localhost:9003:
  LEADER: [Member(sact://second@localhost:9002, status: joining, reachability: reachable)]
  [sact://second:490321953@localhost:9002] STATUS: [joining]
  [sact://third:448661589@localhost:9003] STATUS: [joining],
  by leadershipChange(DistributedActors.Cluster.LeadershipChange(oldLeader: nil, newLeader: Optional(Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable))))
Captured log [third][2020-01-23 1:16:38.0780] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://third@localhost:9003: 4])
NOW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://third@localhost:9003 @ 3
), membership: Membership(count: 2, leader: [Member(sact://second@localhost:9002, status: joining, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)]))
NEW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://third@localhost:9003 @ 4
), membership: Membership(count: 2, leader: [Member(sact://second@localhost:9002, status: joining, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)]))
Captured log [third][2020-01-23 1:16:38.0780] [DowningStrategy.swift:76][/system/cluster/downingStrategy] [trace] Downing strategy reaction to leadershipChange(DistributedActors.Cluster.LeadershipChange(oldLeader: nil, newLeader: Optional(Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)))) resulted in: none
// metadata:
// "downing/strategy": TimeoutBasedDowningStrategy
// "tag": downing
Captured log [third][2020-01-23 1:16:38.0780] [ClusterEventStream.swift:60][/system/clusterEvents] [trace] Published event leadershipChange(DistributedActors.Cluster.LeadershipChange(oldLeader: nil, newLeader: Optional(Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)))) to 4 subscribers
// metadata:
// "eventStream/subscribers": ["/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y", "/system/replicator/$sub-DistributedActors.Cluster.Event-y", "/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/leadership"]
Captured log [third][2020-01-23 1:16:38.0800] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 2
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://third@localhost:9003 @ 4
// ), membership: Membership(count: 2, leader: [Member(sact://second@localhost:9002, status: joining, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)])))
Captured log [third][2020-01-23 1:16:38.0810] [ClusterShellState.swift:93][/system/cluster] [info] ACK  VERSION >>> [uniqueNode:sact://third@localhost:9003: 4] >>>> [uniqueNode:sact://second@localhost:9002: 5, uniqueNode:sact://first@localhost:9001: 4, uniqueNode:sact://third@localhost:9003: 4]
NOW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://third@localhost:9003 @ 4
), membership: Membership(count: 2, leader: [Member(sact://second@localhost:9002, status: joining, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)]))
NEW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 4
), membership: Membership(count: 3, leader: [Member(sact://second@localhost:9002, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
RES: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 4
), membership: Membership(count: 3, leader: [Member(sact://second@localhost:9002, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
Captured log [third][2020-01-23 1:16:38.0810] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.concurrent] to incoming gossip; Merge resulted in 2 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://third@localhost:9003 @ 4
// ), membership: Membership(count: 2, leader: [Member(sact://second@localhost:9002, status: joining, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: joining, reachability: reachable)]))
// "gossip/incoming": Gossip(owner: sact://second:490321953@localhost:9002, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 2
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable)]))
// "gossip/now": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 2
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 4
// ), membership: Membership(count: 3, leader: [Member(sact://second@localhost:9002, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "membership/changes": ["Cluster.MembershipChange(node: sact://second@localhost:9002, replaced: [nil], fromStatus: joining, toStatus: up)", "Cluster.MembershipChange(node: sact://first@localhost:9001, replaced: [nil], fromStatus: up, toStatus: up)"]
// "tag": membership
Captured log [third][2020-01-23 1:16:38.0810] [ClusterShell.swift:627][/system/cluster] [info] Extending handshake offer to sact://first@localhost:9001)
Captured log [third][2020-01-23 1:16:38.0810] [DowningStrategy.swift:76][/system/cluster/downingStrategy] [trace] Downing strategy reaction to membershipChange(sact://second@localhost:9002 :: [joining] -> [     up]) resulted in: none
// metadata:
// "downing/strategy": TimeoutBasedDowningStrategy
// "tag": downing
Captured log [third][2020-01-23 1:16:38.0810] [ClusterEventStream.swift:60][/system/clusterEvents] [trace] Published event membershipChange(sact://second@localhost:9002 :: [joining] -> [     up]) to 4 subscribers
// metadata:
// "eventStream/subscribers": ["/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y", "/system/replicator/$sub-DistributedActors.Cluster.Event-y", "/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/leadership"]
Captured log [third][2020-01-23 1:16:38.0820] [DowningStrategy.swift:76][/system/cluster/downingStrategy] [trace] Downing strategy reaction to membershipChange(sact://first@localhost:9001 :: [     up] -> [     up]) resulted in: none
// metadata:
// "downing/strategy": TimeoutBasedDowningStrategy
// "tag": downing
Captured log [third][2020-01-23 1:16:38.0820] [ClusterEventStream.swift:60][/system/clusterEvents] [trace] Published event membershipChange(sact://first@localhost:9001 :: [     up] -> [     up]) to 4 subscribers
// metadata:
// "eventStream/subscribers": ["/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y", "/system/replicator/$sub-DistributedActors.Cluster.Event-y", "/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/leadership"]
Captured log [third][2020-01-23 1:16:38.0820] [Leadership.swift:321][/system/cluster/leadership] [debug] Selected new leader: [[Member(sact://second@localhost:9002, status: up, reachability: reachable)] -> [Member(sact://first@localhost:9001, status: up, reachability: reachable)]]
// metadata:
// "membership": Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1)])
Captured log [third][2020-01-23 1:16:38.0850] [ClusterShellState.swift:85][/system/cluster] [info] BUMP VERSION >>> [uniqueNode:sact://second@localhost:9002: 5, uniqueNode:sact://first@localhost:9001: 4, uniqueNode:sact://third@localhost:9003: 4] >>>> [uniqueNode:sact://second@localhost:9002: 5, uniqueNode:sact://first@localhost:9001: 4, uniqueNode:sact://third@localhost:9003: 5]
NOW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 4
), membership: Membership(count: 3, leader: [Member(sact://second@localhost:9002, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
NEW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 4
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
RES: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 5
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
Captured log [third][2020-01-23 1:16:38.0860] [ClusterShellState.swift:445][/system/cluster] [info] Leader change: LeadershipChange(oldLeader: Optional(Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable)), newLeader: Optional(Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)))
// metadata:
// "membership/count": 3
Captured log [third][2020-01-23 1:16:38.0860] [ClusterShellState.swift:483][/system/cluster] [trace] Membership updated Membership sact://third@localhost:9003:
  LEADER: [Member(sact://first@localhost:9001, status: up, reachability: reachable)]
  [sact://first:2644199270@localhost:9001] STATUS: [     up]
  [sact://second:490321953@localhost:9002] STATUS: [     up]
  [sact://third:448661589@localhost:9003] STATUS: [joining],
  by leadershipChange(DistributedActors.Cluster.LeadershipChange(oldLeader: Optional(Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1)), newLeader: Optional(Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1))))
Captured log [third][2020-01-23 1:16:38.0860] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://second@localhost:9002: 5, uniqueNode:sact://first@localhost:9001: 4, uniqueNode:sact://third@localhost:9003: 6])
NOW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 5
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
NEW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
Captured log [third][2020-01-23 1:16:38.0870] [DowningStrategy.swift:76][/system/cluster/downingStrategy] [trace] Downing strategy reaction to leadershipChange(DistributedActors.Cluster.LeadershipChange(oldLeader: Optional(Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1)), newLeader: Optional(Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)))) resulted in: none
// metadata:
// "downing/strategy": TimeoutBasedDowningStrategy
// "tag": downing
Captured log [third][2020-01-23 1:16:38.0870] [ClusterEventStream.swift:60][/system/clusterEvents] [trace] Published event leadershipChange(DistributedActors.Cluster.LeadershipChange(oldLeader: Optional(Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1)), newLeader: Optional(Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)))) to 4 subscribers
// metadata:
// "eventStream/subscribers": ["/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y", "/system/replicator/$sub-DistributedActors.Cluster.Event-y", "/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/leadership"]
Captured log [third][2020-01-23 1:16:38.0870] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://second@localhost:9002: 5, uniqueNode:sact://first@localhost:9001: 4, uniqueNode:sact://third@localhost:9003: 6])
NOW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
NEW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
Captured log [third][2020-01-23 1:16:38.0870] [ClusterShell.swift:824][/system/cluster] [debug] Associated with: [sact://first:2644199270@localhost:9001]; Membership change: Cluster.MembershipChange(node: sact://first@localhost:9001, replaced: [nil], fromStatus: up, toStatus: up), resulting in: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)])
Captured log [third][2020-01-23 1:16:38.0870] [ClusterEventStream.swift:60][/system/clusterEvents] [trace] Published event membershipChange(sact://first@localhost:9001 :: [     up] -> [     up]) to 4 subscribers
// metadata:
// "eventStream/subscribers": ["/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y", "/system/replicator/$sub-DistributedActors.Cluster.Event-y", "/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/leadership"]
Captured log [third][2020-01-23 1:16:38.0870] [DowningStrategy.swift:76][/system/cluster/downingStrategy] [trace] Downing strategy reaction to membershipChange(sact://first@localhost:9001 :: [     up] -> [     up]) resulted in: none
// metadata:
// "downing/strategy": TimeoutBasedDowningStrategy
// "tag": downing
Captured log [third][2020-01-23 1:16:38.0880] [ConvergentGossip.swift:75][/system/cluster/gossip] [trace] Got introduced to peer [ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://first@localhost:9001/system/cluster/gossip)], pushing initial gossip immediately
// metadata:
// "gossip/peerCount": 2
// "gossip/peers": [sact://second:490321953@localhost:9002/system/cluster/gossip, sact://first:2644199270@localhost:9001/system/cluster/gossip]
Captured log [third][2020-01-23 1:16:38.0890] [ConvergentGossip.swift:129][/system/cluster/gossip] [info] Sending gossip to ActorRef<ConvergentGossip<DistributedActors.Cluster.Gossip>.Message>(sact://first@localhost:9001/system/cluster/gossip)
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 2
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)])))
// "gossip/peerCount": 2
// "gossip/peers": [sact://second:490321953@localhost:9002/system/cluster/gossip, sact://first:2644199270@localhost:9001/system/cluster/gossip]
// "gossip/target": sact://first@localhost:9001/system/cluster/gossip
Captured log [third][2020-01-23 1:16:38.0910] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 4
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 2
        uniqueNode:sact://second@localhost:9002 @ 4
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 4
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 2
//         uniqueNode:sact://second@localhost:9002 @ 4
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 2
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)])))
Captured log [third][2020-01-23 1:16:38.0920] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://second@localhost:9002: 5, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://third@localhost:9003: 6])
NOW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 2
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
NEW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 4
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
Captured log [third][2020-01-23 1:16:38.0930] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.concurrent] to incoming gossip; Merge resulted in 0 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 2
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "gossip/incoming": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 4
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 2
//         uniqueNode:sact://second@localhost:9002 @ 4
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
// "gossip/now": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 4
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "membership/changes": []
// "tag": membership
Captured log [third][2020-01-23 1:16:43.4120] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 4
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)])))
Captured log [third][2020-01-23 1:16:43.4130] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://second@localhost:9002: 5, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://third@localhost:9003: 6])
NOW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 4
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
NEW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
Captured log [third][2020-01-23 1:16:43.4140] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.same] to incoming gossip; Merge resulted in 1 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 4
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: joining, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "gossip/incoming": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable, upNumber: 1)]))
// "gossip/now": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "membership/changes": ["Cluster.MembershipChange(node: sact://third@localhost:9003, replaced: [nil], fromStatus: joining, toStatus: up)"]
// "tag": membership
Captured log [third][2020-01-23 1:16:43.4140] [ClusterEventStream.swift:60][/system/clusterEvents] [trace] Published event membershipChange(sact://third@localhost:9003 :: [joining] -> [     up]) to 4 subscribers
// metadata:
// "eventStream/subscribers": ["/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y", "/system/replicator/$sub-DistributedActors.Cluster.Event-y", "/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/leadership"]
Captured log [third][2020-01-23 1:16:43.4140] [DowningStrategy.swift:76][/system/cluster/downingStrategy] [trace] Downing strategy reaction to membershipChange(sact://third@localhost:9003 :: [joining] -> [     up]) resulted in: none
// metadata:
// "downing/strategy": TimeoutBasedDowningStrategy
// "tag": downing
Captured log [third][2020-01-23 1:16:43.5030] [ConvergentGossip.swift:63][/system/cluster/gossip] [trace] Peer terminated: sact://second@localhost:9002/system/cluster/gossip, will not gossip to it anymore
Captured log [third][2020-01-23 1:16:44.0170] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://second@localhost:9002: 5, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://third@localhost:9003: 6])
NOW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: up, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
NEW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
Captured log [third][2020-01-23 1:16:44.0170] [ClusterShell.swift:1000][/system/cluster] [info] Cluster membership change: [sact://second@localhost:9002 :: [     up] -> [   down]], membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)])
Captured log [third][2020-01-23 1:16:44.0180] [ClusterEventStream.swift:60][/system/clusterEvents] [trace] Published event membershipChange(sact://second@localhost:9002 :: [     up] -> [   down]) to 4 subscribers
// metadata:
// "eventStream/subscribers": ["/system/cluster/downingStrategy/$sub-DistributedActors.Cluster.Event-y", "/system/replicator/$sub-DistributedActors.Cluster.Event-y", "/system/nodeDeathWatcher/$sub-DistributedActors.Cluster.Event-y", "/system/cluster/leadership"]
Captured log [third][2020-01-23 1:16:44.0180] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://second@localhost:9002: 5, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://third@localhost:9003: 6])
NOW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
NEW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
Captured log [third][2020-01-23 1:16:44.0180] [ClusterShell.swift:138][/system/cluster] [trace] Finish association with sact://second@localhost:9002, yet node not in membership already?
Captured log [third][2020-01-23 1:16:44.5120] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)])))
Captured log [third][2020-01-23 1:16:44.5130] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://second@localhost:9002: 5, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://third@localhost:9003: 6])
NOW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
NEW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
Captured log [third][2020-01-23 1:16:44.5130] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.same] to incoming gossip; Merge resulted in 0 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "gossip/incoming": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1)]))
// "gossip/now": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "membership/changes": []
// "tag": membership
Captured log [third][2020-01-23 1:16:45.6070] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)])))
Captured log [third][2020-01-23 1:16:45.6080] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://second@localhost:9002: 5, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://third@localhost:9003: 6])
NOW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
NEW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
Captured log [third][2020-01-23 1:16:45.6090] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.same] to incoming gossip; Merge resulted in 0 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "gossip/incoming": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1)]))
// "gossip/now": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "membership/changes": []
// "tag": membership
Captured log [third][2020-01-23 1:16:46.7050] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)])))
Captured log [third][2020-01-23 1:16:46.7060] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://second@localhost:9002: 5, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://third@localhost:9003: 6])
NOW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
NEW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
Captured log [third][2020-01-23 1:16:46.7060] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.same] to incoming gossip; Merge resulted in 0 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "gossip/incoming": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
// "gossip/now": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "membership/changes": []
// "tag": membership
Captured log [third][2020-01-23 1:16:47.7480] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)])))
Captured log [third][2020-01-23 1:16:47.7490] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://second@localhost:9002: 5, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://third@localhost:9003: 6])
NOW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
NEW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
Captured log [third][2020-01-23 1:16:47.7500] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.same] to incoming gossip; Merge resulted in 0 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "gossip/incoming": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1)]))
// "gossip/now": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "membership/changes": []
// "tag": membership
Captured log [third][2020-01-23 1:16:48.8030] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)])))
Captured log [third][2020-01-23 1:16:48.8040] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://second@localhost:9002: 5, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://third@localhost:9003: 6])
NOW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
NEW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
Captured log [third][2020-01-23 1:16:48.8040] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.same] to incoming gossip; Merge resulted in 0 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "gossip/incoming": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1)]))
// "gossip/now": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "membership/changes": []
// "tag": membership
Captured log [third][2020-01-23 1:16:49.9000] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)])))
Captured log [third][2020-01-23 1:16:49.9000] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://second@localhost:9002: 5, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://third@localhost:9003: 6])
NOW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
NEW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
Captured log [third][2020-01-23 1:16:49.9010] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.same] to incoming gossip; Merge resulted in 0 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "gossip/incoming": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1)]))
// "gossip/now": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "membership/changes": []
// "tag": membership
Captured log [third][2020-01-23 1:16:50.9050] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)])))
Captured log [third][2020-01-23 1:16:50.9060] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://second@localhost:9002: 5, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://third@localhost:9003: 6])
NOW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
NEW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
Captured log [third][2020-01-23 1:16:50.9070] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.same] to incoming gossip; Merge resulted in 0 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "gossip/incoming": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
// "gossip/now": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "membership/changes": []
// "tag": membership
Captured log [third][2020-01-23 1:16:52.0060] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)])))
Captured log [third][2020-01-23 1:16:52.0070] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://second@localhost:9002: 5, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://third@localhost:9003: 6])
NOW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
NEW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
Captured log [third][2020-01-23 1:16:52.0080] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.same] to incoming gossip; Merge resulted in 0 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "gossip/incoming": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1)]))
// "gossip/now": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "membership/changes": []
// "tag": membership
Captured log [third][2020-01-23 1:16:53.1050] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)])))
Captured log [third][2020-01-23 1:16:53.1060] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://second@localhost:9002: 5, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://third@localhost:9003: 6])
NOW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
NEW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958716]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/swim
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958718]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/gossip
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958722]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/receptionist/$messageAdapter
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958765]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/system/receptionist/$messageAdapter
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958763]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://first@localhost:9001/user/$ask-bb
Captured log [third][2020-01-23 1:16:53.1070] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.same] to incoming gossip; Merge resulted in 0 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "gossip/incoming": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
// "gossip/now": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "membership/changes": []
// "tag": membership
Captured log [third][2020-01-23 1:16:54.2060] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)])))
Captured log [third][2020-01-23 1:16:54.2070] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://second@localhost:9002: 5, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://third@localhost:9003: 6])
NOW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
NEW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
Captured log [third][2020-01-23 1:16:54.2070] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.same] to incoming gossip; Merge resulted in 0 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "gossip/incoming": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1)]))
// "gossip/now": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "membership/changes": []
// "tag": membership
Captured log [third][2020-01-23 1:16:55.3040] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)])))
Captured log [third][2020-01-23 1:16:55.3050] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://second@localhost:9002: 5, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://third@localhost:9003: 6])
NOW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
NEW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
Captured log [third][2020-01-23 1:16:55.3050] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.same] to incoming gossip; Merge resulted in 0 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "gossip/incoming": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1)]))
// "gossip/now": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "membership/changes": []
// "tag": membership
Captured log [third][2020-01-23 1:16:56.4050] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)])))
Captured log [third][2020-01-23 1:16:56.4060] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://second@localhost:9002: 5, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://third@localhost:9003: 6])
NOW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
NEW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
Captured log [third][2020-01-23 1:16:56.4060] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.same] to incoming gossip; Merge resulted in 0 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "gossip/incoming": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
// "gossip/now": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "membership/changes": []
// "tag": membership
Captured log [third][2020-01-23 1:16:57.4790] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)])))
Captured log [third][2020-01-23 1:16:57.4800] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://second@localhost:9002: 5, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://third@localhost:9003: 6])
NOW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
NEW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
Captured log [third][2020-01-23 1:16:57.4810] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.same] to incoming gossip; Merge resulted in 0 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "gossip/incoming": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1)]))
// "gossip/now": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "membership/changes": []
// "tag": membership
Captured log [third][2020-01-23 1:16:58.5400] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)])))
Captured log [third][2020-01-23 1:16:58.5410] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://second@localhost:9002: 5, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://third@localhost:9003: 6])
NOW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
NEW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
Captured log [third][2020-01-23 1:16:58.5430] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.same] to incoming gossip; Merge resulted in 0 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "gossip/incoming": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1)]))
// "gossip/now": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "membership/changes": []
// "tag": membership
Captured log [third][2020-01-23 1:16:59.6370] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)])))
Captured log [third][2020-01-23 1:16:59.6380] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://second@localhost:9002: 5, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://third@localhost:9003: 6])
NOW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
NEW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
Captured log [third][2020-01-23 1:16:59.6390] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.same] to incoming gossip; Merge resulted in 0 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "gossip/incoming": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1)]))
// "gossip/now": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "membership/changes": []
// "tag": membership
Captured log [third][2020-01-23 1:17:00.7280] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)])))
Captured log [third][2020-01-23 1:17:00.7290] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://second@localhost:9002: 5, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://third@localhost:9003: 6])
NOW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
NEW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
Captured log [third][2020-01-23 1:17:00.7300] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.same] to incoming gossip; Merge resulted in 0 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "gossip/incoming": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1)]))
// "gossip/now": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "membership/changes": []
// "tag": membership
Captured log [third][2020-01-23 1:17:01.7300] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)])))
Captured log [third][2020-01-23 1:17:01.7300] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://second@localhost:9002: 5, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://third@localhost:9003: 6])
NOW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
NEW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
Captured log [third][2020-01-23 1:17:01.7310] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.same] to incoming gossip; Merge resulted in 0 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "gossip/incoming": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1)]))
// "gossip/now": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "membership/changes": []
// "tag": membership
Captured log [third][2020-01-23 1:17:02.7310] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)])))
Captured log [third][2020-01-23 1:17:02.7320] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://second@localhost:9002: 5, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://third@localhost:9003: 6])
NOW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
NEW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
Captured log [third][2020-01-23 1:17:02.7330] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.same] to incoming gossip; Merge resulted in 0 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "gossip/incoming": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
// "gossip/now": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "membership/changes": []
// "tag": membership
Captured log [third][2020-01-23 1:17:03.8300] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)])))
Captured log [third][2020-01-23 1:17:03.8310] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://second@localhost:9002: 5, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://third@localhost:9003: 6])
NOW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
NEW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
Captured log [third][2020-01-23 1:17:03.8320] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.same] to incoming gossip; Merge resulted in 0 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "gossip/incoming": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1)]))
// "gossip/now": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "membership/changes": []
// "tag": membership
Captured log [third][2020-01-23 1:17:04.9370] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)])))
Captured log [third][2020-01-23 1:17:04.9370] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://second@localhost:9002: 5, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://third@localhost:9003: 6])
NOW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
NEW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
Captured log [third][2020-01-23 1:17:04.9380] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.same] to incoming gossip; Merge resulted in 0 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "gossip/incoming": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1)]))
// "gossip/now": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "membership/changes": []
// "tag": membership
Captured log [third][2020-01-23 1:17:05.9910] [ConvergentGossip.swift:88][/system/cluster/gossip] [trace] Received gossip: GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 4
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1)])))
// metadata:
// "actor/message": GossipEnvelope(payload: DistributedActors.Cluster.Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1)])))
// "gossip/localPayload": Optional(DistributedActors.Cluster.Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)])))
Captured log [third][2020-01-23 1:17:05.9910] [ClusterShellState.swift:74][/system/cluster] [info] KEEP VERSION >>> Optional([uniqueNode:sact://second@localhost:9002: 5, uniqueNode:sact://first@localhost:9001: 5, uniqueNode:sact://third@localhost:9003: 6])
NOW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
NEW: Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
    sact://first@localhost:9001 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://second@localhost:9002 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
    sact://third@localhost:9003 observed versions:
        uniqueNode:sact://first@localhost:9001 @ 5
        uniqueNode:sact://second@localhost:9002 @ 5
        uniqueNode:sact://third@localhost:9003 @ 6
), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
Captured log [third][2020-01-23 1:17:05.9920] [ClusterShell.swift:501][/system/cluster] [trace] Local membership version is [.same] to incoming gossip; Merge resulted in 0 changes.
// metadata:
// "gossip/before": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "gossip/incoming": Gossip(owner: sact://first:2644199270@localhost:9001, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 4
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable, upNumber: 1), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable, upNumber: 1), Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable, upNumber: 1)]))
// "gossip/now": Gossip(owner: sact://third:448661589@localhost:9003, seen: Cluster.Gossip.SeenTable(
//     sact://first@localhost:9001 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://second@localhost:9002 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
//     sact://third@localhost:9003 observed versions:
//         uniqueNode:sact://first@localhost:9001 @ 5
//         uniqueNode:sact://second@localhost:9002 @ 5
//         uniqueNode:sact://third@localhost:9003 @ 6
// ), membership: Membership(count: 3, leader: [Member(sact://first@localhost:9001, status: up, reachability: reachable)], members: [Member(sact://third:448661589@localhost:9003, status: up, reachability: reachable), Member(sact://second:490321953@localhost:9002, status: down, reachability: reachable), Member(sact://first:2644199270@localhost:9001, status: up, reachability: reachable)]))
// "membership/changes": []
// "tag": membership
========================================================================================================================
[pprint][/Users/ktoso/code/actors/Sources/DistributedActors/Cluster/Transport/ActorRef+RemotePersonality.swift:103][thread:958721]: FIXME: Workaround, ActorRef's RemotePersonality had to spin 1 times to obtain remoteControl to send message to sact://third@localhost:9003/system/cluster/gossip
Test Case '-[DistributedActorsTests.DowningClusteredTests test_downingNode_eventuallyResultsInRemovalFromGossip]' failed (32.275 seconds).
Test Suite 'DowningClusteredTests' failed at 2020-01-23 01:17:09.076.
	 Executed 1 test, with 2 failures (1 unexpected) in 32.275 (32.275) seconds
Test Suite 'swift-distributed-actorsPackageTests.xctest' failed at 2020-01-23 01:17:09.076.
	 Executed 1 test, with 2 failures (1 unexpected) in 32.275 (32.275) seconds
Test Suite 'Selected tests' failed at 2020-01-23 01:17:09.076.
	 Executed 1 test, with 2 failures (1 unexpected) in 32.275 (32.275) seconds
ktoso@mikazuki-5plus [01:17:09] [~/code/actors] [wip-removal-moves-by-leader *]
-> % swift test --filter test_downingNode_eventuallyResultsInRemovalFromGossip
ktoso@mikazuki-5plus [01:17:23] [~/code/actors] [wip-removal-moves-by-leader *]
-> % pbpaste| grep 'sending'
ktoso@mikazuki-5plus [01:17:32] [~/code/actors] [wip-removal-moves-by-leader *]
-> % pbpaste | grep 'sending'