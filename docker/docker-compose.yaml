# this file is not designed to be run directly
# instead, use the docker-compose.<os>.<swift> files
# eg docker-compose -f docker/docker-compose.yaml -f docker/docker-compose.1604.51.yaml run test
version: "3"

services:

  runtime-setup:
    image: swift-distributed-actors:default
    build:
      context: .
      dockerfile: Dockerfile

  common: &common
    image: swift-distributed-actors:default
    depends_on: [runtime-setup]
    volumes:
      - ~/.ssh:/root/.ssh
      - ..:/code:z
    working_dir: /code
    cap_drop:
      - CAP_NET_RAW
      - CAP_NET_BIND_SERVICE
    environment:
      - MAX_ALLOCS_ALLOWED_001_actor_address=5
      - MAX_ALLOCS_ALLOWED_002_actor_spawn=56

  sanity:
    <<: *common
    command: /bin/bash -cl "./scripts/sanity.sh"

  unit-tests:
    <<: *common
    command: /bin/bash -cl "swift test --enable-test-discovery"

  unit-tests-until-failure:
    <<: *common
    command: /bin/bash -cl "while swift test --enable-test-discovery; do :; done"

  integration-tests:
    <<: *common
    command: /bin/bash -cl "./scripts/integration_tests.sh"

  test:
    <<: *common
    command: /bin/bash -cl "SACT_WARNINGS_AS_ERRORS=yes swift test --enable-test-discovery -Xswiftc -DSACT_TESTS_LEAKS && ./scripts/integration_tests.sh"

  bench:
    <<: *common
    command: /bin/bash -cl "swift run DistributedActorsBenchmarks"

  # util

  shell:
    <<: *common
    entrypoint: /bin/bash -l

  # samples

  sample-crash:
    <<: *common
    command: /bin/bash -cl "swift run SampleLetItCrash div-by-0"

  sample-crash-actor:
    <<: *common
    command: /bin/bash -cl "swift run -Xswiftc='-DSACT_BACKTRACE_DEMANGLE' SampleLetItCrash div-by-0 actor"
